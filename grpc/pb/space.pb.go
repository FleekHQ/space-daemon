// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.1
// source: space.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EventType int32

const (
	EventType_ENTRY_ADDED               EventType = 0
	EventType_ENTRY_DELETED             EventType = 1
	EventType_ENTRY_UPDATED             EventType = 2
	EventType_ENTRY_BACKUP_IN_PROGRESS  EventType = 3
	EventType_ENTRY_BACKUP_READY        EventType = 4
	EventType_ENTRY_RESTORE_IN_PROGRESS EventType = 5
	EventType_ENTRY_RESTORE_READY       EventType = 6
	EventType_FOLDER_ADDED              EventType = 7
	EventType_FOLDER_DELETED            EventType = 8
	EventType_FOLDER_UPDATED            EventType = 9
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "ENTRY_ADDED",
		1: "ENTRY_DELETED",
		2: "ENTRY_UPDATED",
		3: "ENTRY_BACKUP_IN_PROGRESS",
		4: "ENTRY_BACKUP_READY",
		5: "ENTRY_RESTORE_IN_PROGRESS",
		6: "ENTRY_RESTORE_READY",
		7: "FOLDER_ADDED",
		8: "FOLDER_DELETED",
		9: "FOLDER_UPDATED",
	}
	EventType_value = map[string]int32{
		"ENTRY_ADDED":               0,
		"ENTRY_DELETED":             1,
		"ENTRY_UPDATED":             2,
		"ENTRY_BACKUP_IN_PROGRESS":  3,
		"ENTRY_BACKUP_READY":        4,
		"ENTRY_RESTORE_IN_PROGRESS": 5,
		"ENTRY_RESTORE_READY":       6,
		"FOLDER_ADDED":              7,
		"FOLDER_DELETED":            8,
		"FOLDER_UPDATED":            9,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_space_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_space_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{0}
}

type KeyBackupType int32

const (
	KeyBackupType_PASSWORD KeyBackupType = 0
	KeyBackupType_GOOGLE   KeyBackupType = 1
	KeyBackupType_TWITTER  KeyBackupType = 2
	KeyBackupType_EMAIL    KeyBackupType = 3
)

// Enum value maps for KeyBackupType.
var (
	KeyBackupType_name = map[int32]string{
		0: "PASSWORD",
		1: "GOOGLE",
		2: "TWITTER",
		3: "EMAIL",
	}
	KeyBackupType_value = map[string]int32{
		"PASSWORD": 0,
		"GOOGLE":   1,
		"TWITTER":  2,
		"EMAIL":    3,
	}
)

func (x KeyBackupType) Enum() *KeyBackupType {
	p := new(KeyBackupType)
	*p = x
	return p
}

func (x KeyBackupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyBackupType) Descriptor() protoreflect.EnumDescriptor {
	return file_space_proto_enumTypes[1].Descriptor()
}

func (KeyBackupType) Type() protoreflect.EnumType {
	return &file_space_proto_enumTypes[1]
}

func (x KeyBackupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyBackupType.Descriptor instead.
func (KeyBackupType) EnumDescriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{1}
}

type FuseState int32

const (
	FuseState_UNSUPPORTED   FuseState = 0
	FuseState_NOT_INSTALLED FuseState = 1
	FuseState_UNMOUNTED     FuseState = 2
	FuseState_MOUNTED       FuseState = 3
)

// Enum value maps for FuseState.
var (
	FuseState_name = map[int32]string{
		0: "UNSUPPORTED",
		1: "NOT_INSTALLED",
		2: "UNMOUNTED",
		3: "MOUNTED",
	}
	FuseState_value = map[string]int32{
		"UNSUPPORTED":   0,
		"NOT_INSTALLED": 1,
		"UNMOUNTED":     2,
		"MOUNTED":       3,
	}
)

func (x FuseState) Enum() *FuseState {
	p := new(FuseState)
	*p = x
	return p
}

func (x FuseState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FuseState) Descriptor() protoreflect.EnumDescriptor {
	return file_space_proto_enumTypes[2].Descriptor()
}

func (FuseState) Type() protoreflect.EnumType {
	return &file_space_proto_enumTypes[2]
}

func (x FuseState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FuseState.Descriptor instead.
func (FuseState) EnumDescriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{2}
}

type NotificationType int32

const (
	NotificationType_UNKNOWN            NotificationType = 0
	NotificationType_INVITATION         NotificationType = 1
	NotificationType_USAGEALERT         NotificationType = 2
	NotificationType_INVITATION_REPLY   NotificationType = 3
	NotificationType_REVOKED_INVITATION NotificationType = 4
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "UNKNOWN",
		1: "INVITATION",
		2: "USAGEALERT",
		3: "INVITATION_REPLY",
		4: "REVOKED_INVITATION",
	}
	NotificationType_value = map[string]int32{
		"UNKNOWN":            0,
		"INVITATION":         1,
		"USAGEALERT":         2,
		"INVITATION_REPLY":   3,
		"REVOKED_INVITATION": 4,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_space_proto_enumTypes[3].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_space_proto_enumTypes[3]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{3}
}

type InvitationStatus int32

const (
	InvitationStatus_PENDING  InvitationStatus = 0
	InvitationStatus_ACCEPTED InvitationStatus = 1
	InvitationStatus_REJECTED InvitationStatus = 2
)

// Enum value maps for InvitationStatus.
var (
	InvitationStatus_name = map[int32]string{
		0: "PENDING",
		1: "ACCEPTED",
		2: "REJECTED",
	}
	InvitationStatus_value = map[string]int32{
		"PENDING":  0,
		"ACCEPTED": 1,
		"REJECTED": 2,
	}
)

func (x InvitationStatus) Enum() *InvitationStatus {
	p := new(InvitationStatus)
	*p = x
	return p
}

func (x InvitationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvitationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_space_proto_enumTypes[4].Descriptor()
}

func (InvitationStatus) Type() protoreflect.EnumType {
	return &file_space_proto_enumTypes[4]
}

func (x InvitationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvitationStatus.Descriptor instead.
func (InvitationStatus) EnumDescriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{4}
}

type SearchFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchFilesRequest) Reset() {
	*x = SearchFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFilesRequest) ProtoMessage() {}

func (x *SearchFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFilesRequest.ProtoReflect.Descriptor instead.
func (*SearchFilesRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{0}
}

func (x *SearchFilesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*SearchFilesDirectoryEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Query   string                       `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchFilesResponse) Reset() {
	*x = SearchFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFilesResponse) ProtoMessage() {}

func (x *SearchFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFilesResponse.ProtoReflect.Descriptor instead.
func (*SearchFilesResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{1}
}

func (x *SearchFilesResponse) GetEntries() []*SearchFilesDirectoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *SearchFilesResponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchFilesDirectoryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry  *ListDirectoryEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	DbId   string              `protobuf:"bytes,2,opt,name=dbId,proto3" json:"dbId,omitempty"`
	Bucket string              `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *SearchFilesDirectoryEntry) Reset() {
	*x = SearchFilesDirectoryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFilesDirectoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFilesDirectoryEntry) ProtoMessage() {}

func (x *SearchFilesDirectoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFilesDirectoryEntry.ProtoReflect.Descriptor instead.
func (*SearchFilesDirectoryEntry) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{2}
}

func (x *SearchFilesDirectoryEntry) GetEntry() *ListDirectoryEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *SearchFilesDirectoryEntry) GetDbId() string {
	if x != nil {
		return x.DbId
	}
	return ""
}

func (x *SearchFilesDirectoryEntry) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type SetNotificationsLastSeenAtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *SetNotificationsLastSeenAtRequest) Reset() {
	*x = SetNotificationsLastSeenAtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNotificationsLastSeenAtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNotificationsLastSeenAtRequest) ProtoMessage() {}

func (x *SetNotificationsLastSeenAtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNotificationsLastSeenAtRequest.ProtoReflect.Descriptor instead.
func (*SetNotificationsLastSeenAtRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{3}
}

func (x *SetNotificationsLastSeenAtRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type SetNotificationsLastSeenAtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetNotificationsLastSeenAtResponse) Reset() {
	*x = SetNotificationsLastSeenAtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNotificationsLastSeenAtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNotificationsLastSeenAtResponse) ProtoMessage() {}

func (x *SetNotificationsLastSeenAtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNotificationsLastSeenAtResponse.ProtoReflect.Descriptor instead.
func (*SetNotificationsLastSeenAtResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{4}
}

type GetSharedWithMeFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seek  string `protobuf:"bytes,1,opt,name=seek,proto3" json:"seek,omitempty"`
	Limit int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetSharedWithMeFilesRequest) Reset() {
	*x = GetSharedWithMeFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharedWithMeFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharedWithMeFilesRequest) ProtoMessage() {}

func (x *GetSharedWithMeFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharedWithMeFilesRequest.ProtoReflect.Descriptor instead.
func (*GetSharedWithMeFilesRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{5}
}

func (x *GetSharedWithMeFilesRequest) GetSeek() string {
	if x != nil {
		return x.Seek
	}
	return ""
}

func (x *GetSharedWithMeFilesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSharedWithMeFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*SharedListDirectoryEntry `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextOffset string                      `protobuf:"bytes,2,opt,name=nextOffset,proto3" json:"nextOffset,omitempty"`
}

func (x *GetSharedWithMeFilesResponse) Reset() {
	*x = GetSharedWithMeFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharedWithMeFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharedWithMeFilesResponse) ProtoMessage() {}

func (x *GetSharedWithMeFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharedWithMeFilesResponse.ProtoReflect.Descriptor instead.
func (*GetSharedWithMeFilesResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{6}
}

func (x *GetSharedWithMeFilesResponse) GetItems() []*SharedListDirectoryEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetSharedWithMeFilesResponse) GetNextOffset() string {
	if x != nil {
		return x.NextOffset
	}
	return ""
}

type GetSharedByMeFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seek  string `protobuf:"bytes,1,opt,name=seek,proto3" json:"seek,omitempty"`
	Limit int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetSharedByMeFilesRequest) Reset() {
	*x = GetSharedByMeFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharedByMeFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharedByMeFilesRequest) ProtoMessage() {}

func (x *GetSharedByMeFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharedByMeFilesRequest.ProtoReflect.Descriptor instead.
func (*GetSharedByMeFilesRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{7}
}

func (x *GetSharedByMeFilesRequest) GetSeek() string {
	if x != nil {
		return x.Seek
	}
	return ""
}

func (x *GetSharedByMeFilesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSharedByMeFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*SharedListDirectoryEntry `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextOffset string                      `protobuf:"bytes,2,opt,name=nextOffset,proto3" json:"nextOffset,omitempty"`
}

func (x *GetSharedByMeFilesResponse) Reset() {
	*x = GetSharedByMeFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharedByMeFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharedByMeFilesResponse) ProtoMessage() {}

func (x *GetSharedByMeFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharedByMeFilesResponse.ProtoReflect.Descriptor instead.
func (*GetSharedByMeFilesResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{8}
}

func (x *GetSharedByMeFilesResponse) GetItems() []*SharedListDirectoryEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetSharedByMeFilesResponse) GetNextOffset() string {
	if x != nil {
		return x.NextOffset
	}
	return ""
}

type GetUsageInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUsageInfoRequest) Reset() {
	*x = GetUsageInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsageInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsageInfoRequest) ProtoMessage() {}

func (x *GetUsageInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsageInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUsageInfoRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{9}
}

type GetUsageInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalStarogeUsed   uint64 `protobuf:"varint,1,opt,name=localStarogeUsed,proto3" json:"localStarogeUsed,omitempty"`
	LocalBandwidthUsed uint64 `protobuf:"varint,2,opt,name=localBandwidthUsed,proto3" json:"localBandwidthUsed,omitempty"`
	SpaceStorageUsed   uint64 `protobuf:"varint,3,opt,name=spaceStorageUsed,proto3" json:"spaceStorageUsed,omitempty"`
	SpaceBandwidthUsed uint64 `protobuf:"varint,4,opt,name=spaceBandwidthUsed,proto3" json:"spaceBandwidthUsed,omitempty"`
	UsageQuota         uint64 `protobuf:"varint,5,opt,name=usageQuota,proto3" json:"usageQuota,omitempty"`
}

func (x *GetUsageInfoResponse) Reset() {
	*x = GetUsageInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsageInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsageInfoResponse) ProtoMessage() {}

func (x *GetUsageInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsageInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUsageInfoResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{10}
}

func (x *GetUsageInfoResponse) GetLocalStarogeUsed() uint64 {
	if x != nil {
		return x.LocalStarogeUsed
	}
	return 0
}

func (x *GetUsageInfoResponse) GetLocalBandwidthUsed() uint64 {
	if x != nil {
		return x.LocalBandwidthUsed
	}
	return 0
}

func (x *GetUsageInfoResponse) GetSpaceStorageUsed() uint64 {
	if x != nil {
		return x.SpaceStorageUsed
	}
	return 0
}

func (x *GetUsageInfoResponse) GetSpaceBandwidthUsed() uint64 {
	if x != nil {
		return x.SpaceBandwidthUsed
	}
	return 0
}

func (x *GetUsageInfoResponse) GetUsageQuota() uint64 {
	if x != nil {
		return x.UsageQuota
	}
	return 0
}

type ToggleBucketBackupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Backup bool   `protobuf:"varint,2,opt,name=backup,proto3" json:"backup,omitempty"`
}

func (x *ToggleBucketBackupRequest) Reset() {
	*x = ToggleBucketBackupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleBucketBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleBucketBackupRequest) ProtoMessage() {}

func (x *ToggleBucketBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleBucketBackupRequest.ProtoReflect.Descriptor instead.
func (*ToggleBucketBackupRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{11}
}

func (x *ToggleBucketBackupRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ToggleBucketBackupRequest) GetBackup() bool {
	if x != nil {
		return x.Backup
	}
	return false
}

type ToggleBucketBackupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ToggleBucketBackupResponse) Reset() {
	*x = ToggleBucketBackupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleBucketBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleBucketBackupResponse) ProtoMessage() {}

func (x *ToggleBucketBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleBucketBackupResponse.ProtoReflect.Descriptor instead.
func (*ToggleBucketBackupResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{12}
}

type BucketBackupRestoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *BucketBackupRestoreRequest) Reset() {
	*x = BucketBackupRestoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketBackupRestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketBackupRestoreRequest) ProtoMessage() {}

func (x *BucketBackupRestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketBackupRestoreRequest.ProtoReflect.Descriptor instead.
func (*BucketBackupRestoreRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{13}
}

func (x *BucketBackupRestoreRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type BucketBackupRestoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BucketBackupRestoreResponse) Reset() {
	*x = BucketBackupRestoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketBackupRestoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketBackupRestoreResponse) ProtoMessage() {}

func (x *BucketBackupRestoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketBackupRestoreResponse.ProtoReflect.Descriptor instead.
func (*BucketBackupRestoreResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{14}
}

type ListDirectoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket      string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	OmitMembers bool   `protobuf:"varint,2,opt,name=omitMembers,proto3" json:"omitMembers,omitempty"`
}

func (x *ListDirectoriesRequest) Reset() {
	*x = ListDirectoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDirectoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoriesRequest) ProtoMessage() {}

func (x *ListDirectoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoriesRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoriesRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{15}
}

func (x *ListDirectoriesRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ListDirectoriesRequest) GetOmitMembers() bool {
	if x != nil {
		return x.OmitMembers
	}
	return false
}

type FileMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *FileMember) Reset() {
	*x = FileMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMember) ProtoMessage() {}

func (x *FileMember) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMember.ProtoReflect.Descriptor instead.
func (*FileMember) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{16}
}

func (x *FileMember) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *FileMember) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ListDirectoryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path                string        `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	IsDir               bool          `protobuf:"varint,2,opt,name=isDir,proto3" json:"isDir,omitempty"`
	Name                string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SizeInBytes         string        `protobuf:"bytes,4,opt,name=sizeInBytes,proto3" json:"sizeInBytes,omitempty"`
	Created             string        `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	Updated             string        `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	FileExtension       string        `protobuf:"bytes,7,opt,name=fileExtension,proto3" json:"fileExtension,omitempty"`
	IpfsHash            string        `protobuf:"bytes,8,opt,name=ipfsHash,proto3" json:"ipfsHash,omitempty"`
	IsLocallyAvailable  bool          `protobuf:"varint,9,opt,name=isLocallyAvailable,proto3" json:"isLocallyAvailable,omitempty"`
	BackupCount         int64         `protobuf:"varint,10,opt,name=backupCount,proto3" json:"backupCount,omitempty"`
	Members             []*FileMember `protobuf:"bytes,11,rep,name=members,proto3" json:"members,omitempty"`
	IsBackupInProgress  bool          `protobuf:"varint,12,opt,name=isBackupInProgress,proto3" json:"isBackupInProgress,omitempty"`
	IsRestoreInProgress bool          `protobuf:"varint,13,opt,name=isRestoreInProgress,proto3" json:"isRestoreInProgress,omitempty"`
}

func (x *ListDirectoryEntry) Reset() {
	*x = ListDirectoryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDirectoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryEntry) ProtoMessage() {}

func (x *ListDirectoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryEntry.ProtoReflect.Descriptor instead.
func (*ListDirectoryEntry) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{17}
}

func (x *ListDirectoryEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListDirectoryEntry) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *ListDirectoryEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListDirectoryEntry) GetSizeInBytes() string {
	if x != nil {
		return x.SizeInBytes
	}
	return ""
}

func (x *ListDirectoryEntry) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *ListDirectoryEntry) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *ListDirectoryEntry) GetFileExtension() string {
	if x != nil {
		return x.FileExtension
	}
	return ""
}

func (x *ListDirectoryEntry) GetIpfsHash() string {
	if x != nil {
		return x.IpfsHash
	}
	return ""
}

func (x *ListDirectoryEntry) GetIsLocallyAvailable() bool {
	if x != nil {
		return x.IsLocallyAvailable
	}
	return false
}

func (x *ListDirectoryEntry) GetBackupCount() int64 {
	if x != nil {
		return x.BackupCount
	}
	return 0
}

func (x *ListDirectoryEntry) GetMembers() []*FileMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ListDirectoryEntry) GetIsBackupInProgress() bool {
	if x != nil {
		return x.IsBackupInProgress
	}
	return false
}

func (x *ListDirectoryEntry) GetIsRestoreInProgress() bool {
	if x != nil {
		return x.IsRestoreInProgress
	}
	return false
}

type SharedListDirectoryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry        *ListDirectoryEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	DbId         string              `protobuf:"bytes,2,opt,name=dbId,proto3" json:"dbId,omitempty"`
	Bucket       string              `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	IsPublicLink bool                `protobuf:"varint,4,opt,name=isPublicLink,proto3" json:"isPublicLink,omitempty"`
}

func (x *SharedListDirectoryEntry) Reset() {
	*x = SharedListDirectoryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedListDirectoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedListDirectoryEntry) ProtoMessage() {}

func (x *SharedListDirectoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedListDirectoryEntry.ProtoReflect.Descriptor instead.
func (*SharedListDirectoryEntry) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{18}
}

func (x *SharedListDirectoryEntry) GetEntry() *ListDirectoryEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *SharedListDirectoryEntry) GetDbId() string {
	if x != nil {
		return x.DbId
	}
	return ""
}

func (x *SharedListDirectoryEntry) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *SharedListDirectoryEntry) GetIsPublicLink() bool {
	if x != nil {
		return x.IsPublicLink
	}
	return false
}

type ListDirectoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ListDirectoryEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *ListDirectoriesResponse) Reset() {
	*x = ListDirectoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDirectoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoriesResponse) ProtoMessage() {}

func (x *ListDirectoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoriesResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoriesResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{19}
}

func (x *ListDirectoriesResponse) GetEntries() []*ListDirectoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ListDirectoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Bucket      string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	OmitMembers bool   `protobuf:"varint,3,opt,name=omitMembers,proto3" json:"omitMembers,omitempty"`
}

func (x *ListDirectoryRequest) Reset() {
	*x = ListDirectoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryRequest) ProtoMessage() {}

func (x *ListDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{20}
}

func (x *ListDirectoryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListDirectoryRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ListDirectoryRequest) GetOmitMembers() bool {
	if x != nil {
		return x.OmitMembers
	}
	return false
}

type ListDirectoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ListDirectoryEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *ListDirectoryResponse) Reset() {
	*x = ListDirectoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryResponse) ProtoMessage() {}

func (x *ListDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{21}
}

func (x *ListDirectoryResponse) GetEntries() []*ListDirectoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type CreateBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *CreateBucketRequest) Reset() {
	*x = CreateBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketRequest) ProtoMessage() {}

func (x *CreateBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketRequest.ProtoReflect.Descriptor instead.
func (*CreateBucketRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{22}
}

func (x *CreateBucketRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type BucketMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	IsOwner   bool   `protobuf:"varint,3,opt,name=isOwner,proto3" json:"isOwner,omitempty"`
	HasJoined bool   `protobuf:"varint,4,opt,name=hasJoined,proto3" json:"hasJoined,omitempty"`
}

func (x *BucketMember) Reset() {
	*x = BucketMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketMember) ProtoMessage() {}

func (x *BucketMember) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketMember.ProtoReflect.Descriptor instead.
func (*BucketMember) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{23}
}

func (x *BucketMember) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BucketMember) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *BucketMember) GetIsOwner() bool {
	if x != nil {
		return x.IsOwner
	}
	return false
}

func (x *BucketMember) GetHasJoined() bool {
	if x != nil {
		return x.HasJoined
	}
	return false
}

type Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key              string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name             string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path             string          `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	CreatedAt        int64           `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        int64           `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Members          []*BucketMember `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	IsPersonalBucket bool            `protobuf:"varint,7,opt,name=isPersonalBucket,proto3" json:"isPersonalBucket,omitempty"`
	IsBackupEnabled  bool            `protobuf:"varint,8,opt,name=isBackupEnabled,proto3" json:"isBackupEnabled,omitempty"`
	ItemsCount       int32           `protobuf:"varint,9,opt,name=itemsCount,proto3" json:"itemsCount,omitempty"`
}

func (x *Bucket) Reset() {
	*x = Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bucket) ProtoMessage() {}

func (x *Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bucket.ProtoReflect.Descriptor instead.
func (*Bucket) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{24}
}

func (x *Bucket) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Bucket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bucket) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Bucket) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Bucket) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Bucket) GetMembers() []*BucketMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Bucket) GetIsPersonalBucket() bool {
	if x != nil {
		return x.IsPersonalBucket
	}
	return false
}

func (x *Bucket) GetIsBackupEnabled() bool {
	if x != nil {
		return x.IsBackupEnabled
	}
	return false
}

func (x *Bucket) GetItemsCount() int32 {
	if x != nil {
		return x.ItemsCount
	}
	return 0
}

type CreateBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket *Bucket `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *CreateBucketResponse) Reset() {
	*x = CreateBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketResponse) ProtoMessage() {}

func (x *CreateBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketResponse.ProtoReflect.Descriptor instead.
func (*CreateBucketResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{25}
}

func (x *CreateBucketResponse) GetBucket() *Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

type GenerateKeyPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateKeyPairRequest) Reset() {
	*x = GenerateKeyPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeyPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeyPairRequest) ProtoMessage() {}

func (x *GenerateKeyPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeyPairRequest.ProtoReflect.Descriptor instead.
func (*GenerateKeyPairRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{26}
}

type GenerateKeyPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mnemonic string `protobuf:"bytes,1,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
}

func (x *GenerateKeyPairResponse) Reset() {
	*x = GenerateKeyPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateKeyPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeyPairResponse) ProtoMessage() {}

func (x *GenerateKeyPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeyPairResponse.ProtoReflect.Descriptor instead.
func (*GenerateKeyPairResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{27}
}

func (x *GenerateKeyPairResponse) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

type GetStoredMnemonicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStoredMnemonicRequest) Reset() {
	*x = GetStoredMnemonicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoredMnemonicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoredMnemonicRequest) ProtoMessage() {}

func (x *GetStoredMnemonicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoredMnemonicRequest.ProtoReflect.Descriptor instead.
func (*GetStoredMnemonicRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{28}
}

type GetStoredMnemonicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mnemonic string `protobuf:"bytes,1,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
}

func (x *GetStoredMnemonicResponse) Reset() {
	*x = GetStoredMnemonicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoredMnemonicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoredMnemonicResponse) ProtoMessage() {}

func (x *GetStoredMnemonicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoredMnemonicResponse.ProtoReflect.Descriptor instead.
func (*GetStoredMnemonicResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{29}
}

func (x *GetStoredMnemonicResponse) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

type RestoreKeyPairViaMnemonicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mnemonic string `protobuf:"bytes,1,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
}

func (x *RestoreKeyPairViaMnemonicRequest) Reset() {
	*x = RestoreKeyPairViaMnemonicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreKeyPairViaMnemonicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreKeyPairViaMnemonicRequest) ProtoMessage() {}

func (x *RestoreKeyPairViaMnemonicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreKeyPairViaMnemonicRequest.ProtoReflect.Descriptor instead.
func (*RestoreKeyPairViaMnemonicRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{30}
}

func (x *RestoreKeyPairViaMnemonicRequest) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

type RestoreKeyPairViaMnemonicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestoreKeyPairViaMnemonicResponse) Reset() {
	*x = RestoreKeyPairViaMnemonicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreKeyPairViaMnemonicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreKeyPairViaMnemonicResponse) ProtoMessage() {}

func (x *RestoreKeyPairViaMnemonicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreKeyPairViaMnemonicResponse.ProtoReflect.Descriptor instead.
func (*RestoreKeyPairViaMnemonicResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{31}
}

type FileEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   EventType           `protobuf:"varint,1,opt,name=type,proto3,enum=space.EventType" json:"type,omitempty"`
	Entry  *ListDirectoryEntry `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
	Bucket string              `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	DbId   string              `protobuf:"bytes,4,opt,name=dbId,proto3" json:"dbId,omitempty"`
}

func (x *FileEventResponse) Reset() {
	*x = FileEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEventResponse) ProtoMessage() {}

func (x *FileEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEventResponse.ProtoReflect.Descriptor instead.
func (*FileEventResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{32}
}

func (x *FileEventResponse) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_ENTRY_ADDED
}

func (x *FileEventResponse) GetEntry() *ListDirectoryEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *FileEventResponse) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *FileEventResponse) GetDbId() string {
	if x != nil {
		return x.DbId
	}
	return ""
}

type TextileEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *TextileEventResponse) Reset() {
	*x = TextileEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextileEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextileEventResponse) ProtoMessage() {}

func (x *TextileEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextileEventResponse.ProtoReflect.Descriptor instead.
func (*TextileEventResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{33}
}

func (x *TextileEventResponse) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type OpenFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	DbId   string `protobuf:"bytes,3,opt,name=dbId,proto3" json:"dbId,omitempty"` // optional field to specify shared with me file
}

func (x *OpenFileRequest) Reset() {
	*x = OpenFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenFileRequest) ProtoMessage() {}

func (x *OpenFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenFileRequest.ProtoReflect.Descriptor instead.
func (*OpenFileRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{34}
}

func (x *OpenFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OpenFileRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *OpenFileRequest) GetDbId() string {
	if x != nil {
		return x.DbId
	}
	return ""
}

type OpenFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *OpenFileResponse) Reset() {
	*x = OpenFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenFileResponse) ProtoMessage() {}

func (x *OpenFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenFileResponse.ProtoReflect.Descriptor instead.
func (*OpenFileResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{35}
}

func (x *OpenFileResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type OpenPublicFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileCid  string `protobuf:"bytes,1,opt,name=fileCid,proto3" json:"fileCid,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *OpenPublicFileRequest) Reset() {
	*x = OpenPublicFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPublicFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPublicFileRequest) ProtoMessage() {}

func (x *OpenPublicFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPublicFileRequest.ProtoReflect.Descriptor instead.
func (*OpenPublicFileRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{36}
}

func (x *OpenPublicFileRequest) GetFileCid() string {
	if x != nil {
		return x.FileCid
	}
	return ""
}

func (x *OpenPublicFileRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *OpenPublicFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type OpenPublicFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *OpenPublicFileResponse) Reset() {
	*x = OpenPublicFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPublicFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPublicFileResponse) ProtoMessage() {}

func (x *OpenPublicFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPublicFileResponse.ProtoReflect.Descriptor instead.
func (*OpenPublicFileResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{37}
}

func (x *OpenPublicFileResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type AddItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// full paths to file or Folder on FS. Needs to be a location available to the daemon
	SourcePaths []string `protobuf:"bytes,1,rep,name=sourcePaths,proto3" json:"sourcePaths,omitempty"`
	// target path in bucket.
	TargetPath string `protobuf:"bytes,2,opt,name=targetPath,proto3" json:"targetPath,omitempty"`
	// The bucket in which to save the item
	Bucket string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *AddItemsRequest) Reset() {
	*x = AddItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemsRequest) ProtoMessage() {}

func (x *AddItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemsRequest.ProtoReflect.Descriptor instead.
func (*AddItemsRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{38}
}

func (x *AddItemsRequest) GetSourcePaths() []string {
	if x != nil {
		return x.SourcePaths
	}
	return nil
}

func (x *AddItemsRequest) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *AddItemsRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type AddItemResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourcePath string `protobuf:"bytes,1,opt,name=sourcePath,proto3" json:"sourcePath,omitempty"`
	BucketPath string `protobuf:"bytes,2,opt,name=bucketPath,proto3" json:"bucketPath,omitempty"`
	Error      string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AddItemResult) Reset() {
	*x = AddItemResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemResult) ProtoMessage() {}

func (x *AddItemResult) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemResult.ProtoReflect.Descriptor instead.
func (*AddItemResult) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{39}
}

func (x *AddItemResult) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *AddItemResult) GetBucketPath() string {
	if x != nil {
		return x.BucketPath
	}
	return ""
}

func (x *AddItemResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type AddItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         *AddItemResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	TotalFiles     int64          `protobuf:"varint,2,opt,name=totalFiles,proto3" json:"totalFiles,omitempty"`
	TotalBytes     int64          `protobuf:"varint,3,opt,name=totalBytes,proto3" json:"totalBytes,omitempty"`
	CompletedFiles int64          `protobuf:"varint,4,opt,name=completedFiles,proto3" json:"completedFiles,omitempty"`
	CompletedBytes int64          `protobuf:"varint,5,opt,name=completedBytes,proto3" json:"completedBytes,omitempty"`
}

func (x *AddItemsResponse) Reset() {
	*x = AddItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemsResponse) ProtoMessage() {}

func (x *AddItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemsResponse.ProtoReflect.Descriptor instead.
func (*AddItemsResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{40}
}

func (x *AddItemsResponse) GetResult() *AddItemResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AddItemsResponse) GetTotalFiles() int64 {
	if x != nil {
		return x.TotalFiles
	}
	return 0
}

func (x *AddItemsResponse) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *AddItemsResponse) GetCompletedFiles() int64 {
	if x != nil {
		return x.CompletedFiles
	}
	return 0
}

func (x *AddItemsResponse) GetCompletedBytes() int64 {
	if x != nil {
		return x.CompletedBytes
	}
	return 0
}

type CreateFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// target path in bucket to add new empty folder
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// The bucket in which to add the folder
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *CreateFolderRequest) Reset() {
	*x = CreateFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderRequest) ProtoMessage() {}

func (x *CreateFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderRequest.ProtoReflect.Descriptor instead.
func (*CreateFolderRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{41}
}

func (x *CreateFolderRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateFolderRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

// not sure we need to return anything other than an error if we failed
type CreateFolderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateFolderResponse) Reset() {
	*x = CreateFolderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderResponse) ProtoMessage() {}

func (x *CreateFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderResponse.ProtoReflect.Descriptor instead.
func (*CreateFolderResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{42}
}

type BackupKeysByPassphraseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string        `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Passphrase string        `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Type       KeyBackupType `protobuf:"varint,3,opt,name=type,proto3,enum=space.KeyBackupType" json:"type,omitempty"`
}

func (x *BackupKeysByPassphraseRequest) Reset() {
	*x = BackupKeysByPassphraseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupKeysByPassphraseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupKeysByPassphraseRequest) ProtoMessage() {}

func (x *BackupKeysByPassphraseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupKeysByPassphraseRequest.ProtoReflect.Descriptor instead.
func (*BackupKeysByPassphraseRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{43}
}

func (x *BackupKeysByPassphraseRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BackupKeysByPassphraseRequest) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

func (x *BackupKeysByPassphraseRequest) GetType() KeyBackupType {
	if x != nil {
		return x.Type
	}
	return KeyBackupType_PASSWORD
}

type BackupKeysByPassphraseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BackupKeysByPassphraseResponse) Reset() {
	*x = BackupKeysByPassphraseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupKeysByPassphraseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupKeysByPassphraseResponse) ProtoMessage() {}

func (x *BackupKeysByPassphraseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupKeysByPassphraseResponse.ProtoReflect.Descriptor instead.
func (*BackupKeysByPassphraseResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{44}
}

type RecoverKeysByPassphraseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string        `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Passphrase string        `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Type       KeyBackupType `protobuf:"varint,3,opt,name=type,proto3,enum=space.KeyBackupType" json:"type,omitempty"`
}

func (x *RecoverKeysByPassphraseRequest) Reset() {
	*x = RecoverKeysByPassphraseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverKeysByPassphraseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverKeysByPassphraseRequest) ProtoMessage() {}

func (x *RecoverKeysByPassphraseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverKeysByPassphraseRequest.ProtoReflect.Descriptor instead.
func (*RecoverKeysByPassphraseRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{45}
}

func (x *RecoverKeysByPassphraseRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RecoverKeysByPassphraseRequest) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

func (x *RecoverKeysByPassphraseRequest) GetType() KeyBackupType {
	if x != nil {
		return x.Type
	}
	return KeyBackupType_PASSWORD
}

type RecoverKeysByPassphraseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecoverKeysByPassphraseResponse) Reset() {
	*x = RecoverKeysByPassphraseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverKeysByPassphraseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverKeysByPassphraseResponse) ProtoMessage() {}

func (x *RecoverKeysByPassphraseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverKeysByPassphraseResponse.ProtoReflect.Descriptor instead.
func (*RecoverKeysByPassphraseResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{46}
}

type TestKeysPassphraseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Passphrase string `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *TestKeysPassphraseRequest) Reset() {
	*x = TestKeysPassphraseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestKeysPassphraseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestKeysPassphraseRequest) ProtoMessage() {}

func (x *TestKeysPassphraseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestKeysPassphraseRequest.ProtoReflect.Descriptor instead.
func (*TestKeysPassphraseRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{47}
}

func (x *TestKeysPassphraseRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *TestKeysPassphraseRequest) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

type TestKeysPassphraseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestKeysPassphraseResponse) Reset() {
	*x = TestKeysPassphraseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestKeysPassphraseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestKeysPassphraseResponse) ProtoMessage() {}

func (x *TestKeysPassphraseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestKeysPassphraseResponse.ProtoReflect.Descriptor instead.
func (*TestKeysPassphraseResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{48}
}

type ThreadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Key       string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ThreadInfo) Reset() {
	*x = ThreadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadInfo) ProtoMessage() {}

func (x *ThreadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadInfo.ProtoReflect.Descriptor instead.
func (*ThreadInfo) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{49}
}

func (x *ThreadInfo) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *ThreadInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ShareBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *ShareBucketRequest) Reset() {
	*x = ShareBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareBucketRequest) ProtoMessage() {}

func (x *ShareBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareBucketRequest.ProtoReflect.Descriptor instead.
func (*ShareBucketRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{50}
}

func (x *ShareBucketRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type ShareBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threadinfo *ThreadInfo `protobuf:"bytes,1,opt,name=threadinfo,proto3" json:"threadinfo,omitempty"`
}

func (x *ShareBucketResponse) Reset() {
	*x = ShareBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareBucketResponse) ProtoMessage() {}

func (x *ShareBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareBucketResponse.ProtoReflect.Descriptor instead.
func (*ShareBucketResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{51}
}

func (x *ShareBucketResponse) GetThreadinfo() *ThreadInfo {
	if x != nil {
		return x.Threadinfo
	}
	return nil
}

type JoinBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threadinfo *ThreadInfo `protobuf:"bytes,1,opt,name=threadinfo,proto3" json:"threadinfo,omitempty"`
	Bucket     string      `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *JoinBucketRequest) Reset() {
	*x = JoinBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinBucketRequest) ProtoMessage() {}

func (x *JoinBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinBucketRequest.ProtoReflect.Descriptor instead.
func (*JoinBucketRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{52}
}

func (x *JoinBucketRequest) GetThreadinfo() *ThreadInfo {
	if x != nil {
		return x.Threadinfo
	}
	return nil
}

func (x *JoinBucketRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type JoinBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *JoinBucketResponse) Reset() {
	*x = JoinBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinBucketResponse) ProtoMessage() {}

func (x *JoinBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinBucketResponse.ProtoReflect.Descriptor instead.
func (*JoinBucketResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{53}
}

func (x *JoinBucketResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ShareFilesViaPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKeys []string    `protobuf:"bytes,1,rep,name=publicKeys,proto3" json:"publicKeys,omitempty"`
	Paths      []*FullPath `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *ShareFilesViaPublicKeyRequest) Reset() {
	*x = ShareFilesViaPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFilesViaPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFilesViaPublicKeyRequest) ProtoMessage() {}

func (x *ShareFilesViaPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFilesViaPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*ShareFilesViaPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{54}
}

func (x *ShareFilesViaPublicKeyRequest) GetPublicKeys() []string {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

func (x *ShareFilesViaPublicKeyRequest) GetPaths() []*FullPath {
	if x != nil {
		return x.Paths
	}
	return nil
}

type FullPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbId   string `protobuf:"bytes,1,opt,name=dbId,proto3" json:"dbId,omitempty"` // optional field to specify shared with me file
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Path   string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *FullPath) Reset() {
	*x = FullPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullPath) ProtoMessage() {}

func (x *FullPath) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullPath.ProtoReflect.Descriptor instead.
func (*FullPath) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{55}
}

func (x *FullPath) GetDbId() string {
	if x != nil {
		return x.DbId
	}
	return ""
}

func (x *FullPath) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *FullPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ShareFilesViaPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShareFilesViaPublicKeyResponse) Reset() {
	*x = ShareFilesViaPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFilesViaPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFilesViaPublicKeyResponse) ProtoMessage() {}

func (x *ShareFilesViaPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFilesViaPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*ShareFilesViaPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{56}
}

type UnshareFilesViaPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKeys []string    `protobuf:"bytes,1,rep,name=publicKeys,proto3" json:"publicKeys,omitempty"`
	Paths      []*FullPath `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *UnshareFilesViaPublicKeyRequest) Reset() {
	*x = UnshareFilesViaPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareFilesViaPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareFilesViaPublicKeyRequest) ProtoMessage() {}

func (x *UnshareFilesViaPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareFilesViaPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*UnshareFilesViaPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{57}
}

func (x *UnshareFilesViaPublicKeyRequest) GetPublicKeys() []string {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

func (x *UnshareFilesViaPublicKeyRequest) GetPaths() []*FullPath {
	if x != nil {
		return x.Paths
	}
	return nil
}

type UnshareFilesViaPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnshareFilesViaPublicKeyResponse) Reset() {
	*x = UnshareFilesViaPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareFilesViaPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareFilesViaPublicKeyResponse) ProtoMessage() {}

func (x *UnshareFilesViaPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareFilesViaPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*UnshareFilesViaPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{58}
}

type GeneratePublicFileLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket    string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ItemPaths []string `protobuf:"bytes,2,rep,name=itemPaths,proto3" json:"itemPaths,omitempty"`
	Password  string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// optional field to specify db id
	// for shared with me files
	DbId string `protobuf:"bytes,4,opt,name=dbId,proto3" json:"dbId,omitempty"`
}

func (x *GeneratePublicFileLinkRequest) Reset() {
	*x = GeneratePublicFileLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePublicFileLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePublicFileLinkRequest) ProtoMessage() {}

func (x *GeneratePublicFileLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePublicFileLinkRequest.ProtoReflect.Descriptor instead.
func (*GeneratePublicFileLinkRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{59}
}

func (x *GeneratePublicFileLinkRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *GeneratePublicFileLinkRequest) GetItemPaths() []string {
	if x != nil {
		return x.ItemPaths
	}
	return nil
}

func (x *GeneratePublicFileLinkRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *GeneratePublicFileLinkRequest) GetDbId() string {
	if x != nil {
		return x.DbId
	}
	return ""
}

type GeneratePublicFileLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link    string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	FileCid string `protobuf:"bytes,2,opt,name=fileCid,proto3" json:"fileCid,omitempty"`
}

func (x *GeneratePublicFileLinkResponse) Reset() {
	*x = GeneratePublicFileLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePublicFileLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePublicFileLinkResponse) ProtoMessage() {}

func (x *GeneratePublicFileLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePublicFileLinkResponse.ProtoReflect.Descriptor instead.
func (*GeneratePublicFileLinkResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{60}
}

func (x *GeneratePublicFileLinkResponse) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *GeneratePublicFileLinkResponse) GetFileCid() string {
	if x != nil {
		return x.FileCid
	}
	return ""
}

type ToggleFuseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MountDrive bool `protobuf:"varint,1,opt,name=mountDrive,proto3" json:"mountDrive,omitempty"`
}

func (x *ToggleFuseRequest) Reset() {
	*x = ToggleFuseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleFuseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleFuseRequest) ProtoMessage() {}

func (x *ToggleFuseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleFuseRequest.ProtoReflect.Descriptor instead.
func (*ToggleFuseRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{61}
}

func (x *ToggleFuseRequest) GetMountDrive() bool {
	if x != nil {
		return x.MountDrive
	}
	return false
}

type FuseDriveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     FuseState `protobuf:"varint,1,opt,name=state,proto3,enum=space.FuseState" json:"state,omitempty"`
	MountPath string    `protobuf:"bytes,2,opt,name=mountPath,proto3" json:"mountPath,omitempty"`
}

func (x *FuseDriveResponse) Reset() {
	*x = FuseDriveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuseDriveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuseDriveResponse) ProtoMessage() {}

func (x *FuseDriveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuseDriveResponse.ProtoReflect.Descriptor instead.
func (*FuseDriveResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{62}
}

func (x *FuseDriveResponse) GetState() FuseState {
	if x != nil {
		return x.State
	}
	return FuseState_UNSUPPORTED
}

func (x *FuseDriveResponse) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

type ListBucketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBucketsRequest) Reset() {
	*x = ListBucketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketsRequest) ProtoMessage() {}

func (x *ListBucketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketsRequest.ProtoReflect.Descriptor instead.
func (*ListBucketsRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{63}
}

type ListBucketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []*Bucket `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *ListBucketsResponse) Reset() {
	*x = ListBucketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketsResponse) ProtoMessage() {}

func (x *ListBucketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketsResponse.ProtoReflect.Descriptor instead.
func (*ListBucketsResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{64}
}

func (x *ListBucketsResponse) GetBuckets() []*Bucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type Invitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviterPublicKey string           `protobuf:"bytes,1,opt,name=inviterPublicKey,proto3" json:"inviterPublicKey,omitempty"`
	InvitationID     string           `protobuf:"bytes,2,opt,name=invitationID,proto3" json:"invitationID,omitempty"`
	Status           InvitationStatus `protobuf:"varint,4,opt,name=status,proto3,enum=space.InvitationStatus" json:"status,omitempty"`
	ItemPaths        []*FullPath      `protobuf:"bytes,5,rep,name=itemPaths,proto3" json:"itemPaths,omitempty"`
}

func (x *Invitation) Reset() {
	*x = Invitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invitation) ProtoMessage() {}

func (x *Invitation) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invitation.ProtoReflect.Descriptor instead.
func (*Invitation) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{65}
}

func (x *Invitation) GetInviterPublicKey() string {
	if x != nil {
		return x.InviterPublicKey
	}
	return ""
}

func (x *Invitation) GetInvitationID() string {
	if x != nil {
		return x.InvitationID
	}
	return ""
}

func (x *Invitation) GetStatus() InvitationStatus {
	if x != nil {
		return x.Status
	}
	return InvitationStatus_PENDING
}

func (x *Invitation) GetItemPaths() []*FullPath {
	if x != nil {
		return x.ItemPaths
	}
	return nil
}

type UsageAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Used    int64  `protobuf:"varint,1,opt,name=used,proto3" json:"used,omitempty"`
	Limit   int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UsageAlert) Reset() {
	*x = UsageAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsageAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageAlert) ProtoMessage() {}

func (x *UsageAlert) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageAlert.ProtoReflect.Descriptor instead.
func (*UsageAlert) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{66}
}

func (x *UsageAlert) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *UsageAlert) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *UsageAlert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type InvitationAccept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitationID string `protobuf:"bytes,2,opt,name=invitationID,proto3" json:"invitationID,omitempty"`
}

func (x *InvitationAccept) Reset() {
	*x = InvitationAccept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationAccept) ProtoMessage() {}

func (x *InvitationAccept) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationAccept.ProtoReflect.Descriptor instead.
func (*InvitationAccept) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{67}
}

func (x *InvitationAccept) GetInvitationID() string {
	if x != nil {
		return x.InvitationID
	}
	return ""
}

type RevokedInvitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviterPublicKey string      `protobuf:"bytes,1,opt,name=inviterPublicKey,proto3" json:"inviterPublicKey,omitempty"`
	ItemPaths        []*FullPath `protobuf:"bytes,5,rep,name=itemPaths,proto3" json:"itemPaths,omitempty"`
}

func (x *RevokedInvitation) Reset() {
	*x = RevokedInvitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokedInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokedInvitation) ProtoMessage() {}

func (x *RevokedInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokedInvitation.ProtoReflect.Descriptor instead.
func (*RevokedInvitation) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{68}
}

func (x *RevokedInvitation) GetInviterPublicKey() string {
	if x != nil {
		return x.InviterPublicKey
	}
	return ""
}

func (x *RevokedInvitation) GetItemPaths() []*FullPath {
	if x != nil {
		return x.ItemPaths
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"` // underlying message id from textile
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Body    string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	// Types that are assignable to RelatedObject:
	//	*Notification_InvitationValue
	//	*Notification_UsageAlert
	//	*Notification_InvitationAccept
	//	*Notification_RevokedInvitation
	RelatedObject isNotification_RelatedObject `protobuf_oneof:"relatedObject"`
	Type          NotificationType             `protobuf:"varint,8,opt,name=type,proto3,enum=space.NotificationType" json:"type,omitempty"`
	CreatedAt     int64                        `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	ReadAt        int64                        `protobuf:"varint,10,opt,name=readAt,proto3" json:"readAt,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{69}
}

func (x *Notification) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Notification) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Notification) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (m *Notification) GetRelatedObject() isNotification_RelatedObject {
	if m != nil {
		return m.RelatedObject
	}
	return nil
}

func (x *Notification) GetInvitationValue() *Invitation {
	if x, ok := x.GetRelatedObject().(*Notification_InvitationValue); ok {
		return x.InvitationValue
	}
	return nil
}

func (x *Notification) GetUsageAlert() *UsageAlert {
	if x, ok := x.GetRelatedObject().(*Notification_UsageAlert); ok {
		return x.UsageAlert
	}
	return nil
}

func (x *Notification) GetInvitationAccept() *InvitationAccept {
	if x, ok := x.GetRelatedObject().(*Notification_InvitationAccept); ok {
		return x.InvitationAccept
	}
	return nil
}

func (x *Notification) GetRevokedInvitation() *RevokedInvitation {
	if x, ok := x.GetRelatedObject().(*Notification_RevokedInvitation); ok {
		return x.RevokedInvitation
	}
	return nil
}

func (x *Notification) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_UNKNOWN
}

func (x *Notification) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Notification) GetReadAt() int64 {
	if x != nil {
		return x.ReadAt
	}
	return 0
}

type isNotification_RelatedObject interface {
	isNotification_RelatedObject()
}

type Notification_InvitationValue struct {
	InvitationValue *Invitation `protobuf:"bytes,4,opt,name=invitationValue,proto3,oneof"`
}

type Notification_UsageAlert struct {
	UsageAlert *UsageAlert `protobuf:"bytes,5,opt,name=usageAlert,proto3,oneof"`
}

type Notification_InvitationAccept struct {
	InvitationAccept *InvitationAccept `protobuf:"bytes,6,opt,name=invitationAccept,proto3,oneof"`
}

type Notification_RevokedInvitation struct {
	RevokedInvitation *RevokedInvitation `protobuf:"bytes,7,opt,name=revokedInvitation,proto3,oneof"`
}

func (*Notification_InvitationValue) isNotification_RelatedObject() {}

func (*Notification_UsageAlert) isNotification_RelatedObject() {}

func (*Notification_InvitationAccept) isNotification_RelatedObject() {}

func (*Notification_RevokedInvitation) isNotification_RelatedObject() {}

type HandleFilesInvitationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitationID string `protobuf:"bytes,1,opt,name=invitationID,proto3" json:"invitationID,omitempty"`
	Accept       bool   `protobuf:"varint,2,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (x *HandleFilesInvitationRequest) Reset() {
	*x = HandleFilesInvitationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleFilesInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleFilesInvitationRequest) ProtoMessage() {}

func (x *HandleFilesInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleFilesInvitationRequest.ProtoReflect.Descriptor instead.
func (*HandleFilesInvitationRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{70}
}

func (x *HandleFilesInvitationRequest) GetInvitationID() string {
	if x != nil {
		return x.InvitationID
	}
	return ""
}

func (x *HandleFilesInvitationRequest) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type HandleFilesInvitationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HandleFilesInvitationResponse) Reset() {
	*x = HandleFilesInvitationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleFilesInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleFilesInvitationResponse) ProtoMessage() {}

func (x *HandleFilesInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleFilesInvitationResponse.ProtoReflect.Descriptor instead.
func (*HandleFilesInvitationResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{71}
}

type NotificationEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *NotificationEventResponse) Reset() {
	*x = NotificationEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationEventResponse) ProtoMessage() {}

func (x *NotificationEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationEventResponse.ProtoReflect.Descriptor instead.
func (*NotificationEventResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{72}
}

func (x *NotificationEventResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type GetNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seek  string `protobuf:"bytes,1,opt,name=seek,proto3" json:"seek,omitempty"`
	Limit int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetNotificationsRequest) Reset() {
	*x = GetNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsRequest) ProtoMessage() {}

func (x *GetNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{73}
}

func (x *GetNotificationsRequest) GetSeek() string {
	if x != nil {
		return x.Seek
	}
	return ""
}

func (x *GetNotificationsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	NextOffset    string          `protobuf:"bytes,2,opt,name=nextOffset,proto3" json:"nextOffset,omitempty"`
	LastSeenAt    int64           `protobuf:"varint,3,opt,name=lastSeenAt,proto3" json:"lastSeenAt,omitempty"`
}

func (x *GetNotificationsResponse) Reset() {
	*x = GetNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsResponse) ProtoMessage() {}

func (x *GetNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{74}
}

func (x *GetNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *GetNotificationsResponse) GetNextOffset() string {
	if x != nil {
		return x.NextOffset
	}
	return ""
}

func (x *GetNotificationsResponse) GetLastSeenAt() int64 {
	if x != nil {
		return x.LastSeenAt
	}
	return 0
}

type ReadNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ReadNotificationRequest) Reset() {
	*x = ReadNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadNotificationRequest) ProtoMessage() {}

func (x *ReadNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadNotificationRequest.ProtoReflect.Descriptor instead.
func (*ReadNotificationRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{75}
}

func (x *ReadNotificationRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ReadNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadNotificationResponse) Reset() {
	*x = ReadNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadNotificationResponse) ProtoMessage() {}

func (x *ReadNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadNotificationResponse.ProtoReflect.Descriptor instead.
func (*ReadNotificationResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{76}
}

type GetPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPublicKeyRequest) Reset() {
	*x = GetPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicKeyRequest) ProtoMessage() {}

func (x *GetPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*GetPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{77}
}

type GetPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public key encoded in hex
	PublicKey string `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *GetPublicKeyResponse) Reset() {
	*x = GetPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicKeyResponse) ProtoMessage() {}

func (x *GetPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*GetPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{78}
}

func (x *GetPublicKeyResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type RecoverKeysByLocalBackupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathToKeyBackup string `protobuf:"bytes,1,opt,name=pathToKeyBackup,proto3" json:"pathToKeyBackup,omitempty"`
}

func (x *RecoverKeysByLocalBackupRequest) Reset() {
	*x = RecoverKeysByLocalBackupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverKeysByLocalBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverKeysByLocalBackupRequest) ProtoMessage() {}

func (x *RecoverKeysByLocalBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverKeysByLocalBackupRequest.ProtoReflect.Descriptor instead.
func (*RecoverKeysByLocalBackupRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{79}
}

func (x *RecoverKeysByLocalBackupRequest) GetPathToKeyBackup() string {
	if x != nil {
		return x.PathToKeyBackup
	}
	return ""
}

type RecoverKeysByLocalBackupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecoverKeysByLocalBackupResponse) Reset() {
	*x = RecoverKeysByLocalBackupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverKeysByLocalBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverKeysByLocalBackupResponse) ProtoMessage() {}

func (x *RecoverKeysByLocalBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverKeysByLocalBackupResponse.ProtoReflect.Descriptor instead.
func (*RecoverKeysByLocalBackupResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{80}
}

type CreateLocalKeysBackupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path in which to save the backup
	PathToKeyBackup string `protobuf:"bytes,1,opt,name=pathToKeyBackup,proto3" json:"pathToKeyBackup,omitempty"`
}

func (x *CreateLocalKeysBackupRequest) Reset() {
	*x = CreateLocalKeysBackupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocalKeysBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocalKeysBackupRequest) ProtoMessage() {}

func (x *CreateLocalKeysBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocalKeysBackupRequest.ProtoReflect.Descriptor instead.
func (*CreateLocalKeysBackupRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{81}
}

func (x *CreateLocalKeysBackupRequest) GetPathToKeyBackup() string {
	if x != nil {
		return x.PathToKeyBackup
	}
	return ""
}

type CreateLocalKeysBackupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateLocalKeysBackupResponse) Reset() {
	*x = CreateLocalKeysBackupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocalKeysBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocalKeysBackupResponse) ProtoMessage() {}

func (x *CreateLocalKeysBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocalKeysBackupResponse.ProtoReflect.Descriptor instead.
func (*CreateLocalKeysBackupResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{82}
}

type DeleteAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAccountRequest) Reset() {
	*x = DeleteAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRequest) ProtoMessage() {}

func (x *DeleteAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{83}
}

type DeleteAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAccountResponse) Reset() {
	*x = DeleteAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountResponse) ProtoMessage() {}

func (x *DeleteAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccountResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{84}
}

type DeleteKeyPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteKeyPairRequest) Reset() {
	*x = DeleteKeyPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKeyPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKeyPairRequest) ProtoMessage() {}

func (x *DeleteKeyPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKeyPairRequest.ProtoReflect.Descriptor instead.
func (*DeleteKeyPairRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{85}
}

type DeleteKeyPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteKeyPairResponse) Reset() {
	*x = DeleteKeyPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKeyPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKeyPairResponse) ProtoMessage() {}

func (x *DeleteKeyPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKeyPairResponse.ProtoReflect.Descriptor instead.
func (*DeleteKeyPairResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{86}
}

type GetAPISessionTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAPISessionTokensRequest) Reset() {
	*x = GetAPISessionTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAPISessionTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPISessionTokensRequest) ProtoMessage() {}

func (x *GetAPISessionTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPISessionTokensRequest.ProtoReflect.Descriptor instead.
func (*GetAPISessionTokensRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{87}
}

type GetAPISessionTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HubToken      string `protobuf:"bytes,1,opt,name=hubToken,proto3" json:"hubToken,omitempty"`
	ServicesToken string `protobuf:"bytes,2,opt,name=servicesToken,proto3" json:"servicesToken,omitempty"`
}

func (x *GetAPISessionTokensResponse) Reset() {
	*x = GetAPISessionTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAPISessionTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPISessionTokensResponse) ProtoMessage() {}

func (x *GetAPISessionTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPISessionTokensResponse.ProtoReflect.Descriptor instead.
func (*GetAPISessionTokensResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{88}
}

func (x *GetAPISessionTokensResponse) GetHubToken() string {
	if x != nil {
		return x.HubToken
	}
	return ""
}

func (x *GetAPISessionTokensResponse) GetServicesToken() string {
	if x != nil {
		return x.ServicesToken
	}
	return ""
}

type GetRecentlySharedWithRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRecentlySharedWithRequest) Reset() {
	*x = GetRecentlySharedWithRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentlySharedWithRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentlySharedWithRequest) ProtoMessage() {}

func (x *GetRecentlySharedWithRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentlySharedWithRequest.ProtoReflect.Descriptor instead.
func (*GetRecentlySharedWithRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{89}
}

type GetRecentlySharedWithResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*FileMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *GetRecentlySharedWithResponse) Reset() {
	*x = GetRecentlySharedWithResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentlySharedWithResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentlySharedWithResponse) ProtoMessage() {}

func (x *GetRecentlySharedWithResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentlySharedWithResponse.ProtoReflect.Descriptor instead.
func (*GetRecentlySharedWithResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{90}
}

func (x *GetRecentlySharedWithResponse) GetMembers() []*FileMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type InitializeMasterAppTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitializeMasterAppTokenRequest) Reset() {
	*x = InitializeMasterAppTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeMasterAppTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeMasterAppTokenRequest) ProtoMessage() {}

func (x *InitializeMasterAppTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeMasterAppTokenRequest.ProtoReflect.Descriptor instead.
func (*InitializeMasterAppTokenRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{91}
}

type InitializeMasterAppTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppToken string `protobuf:"bytes,1,opt,name=appToken,proto3" json:"appToken,omitempty"`
}

func (x *InitializeMasterAppTokenResponse) Reset() {
	*x = InitializeMasterAppTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeMasterAppTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeMasterAppTokenResponse) ProtoMessage() {}

func (x *InitializeMasterAppTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeMasterAppTokenResponse.ProtoReflect.Descriptor instead.
func (*InitializeMasterAppTokenResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{92}
}

func (x *InitializeMasterAppTokenResponse) GetAppToken() string {
	if x != nil {
		return x.AppToken
	}
	return ""
}

type AllowedMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodName string `protobuf:"bytes,1,opt,name=methodName,proto3" json:"methodName,omitempty"`
}

func (x *AllowedMethod) Reset() {
	*x = AllowedMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowedMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowedMethod) ProtoMessage() {}

func (x *AllowedMethod) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowedMethod.ProtoReflect.Descriptor instead.
func (*AllowedMethod) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{93}
}

func (x *AllowedMethod) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

type GenerateAppTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowedMethods []*AllowedMethod `protobuf:"bytes,1,rep,name=allowedMethods,proto3" json:"allowedMethods,omitempty"`
}

func (x *GenerateAppTokenRequest) Reset() {
	*x = GenerateAppTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAppTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAppTokenRequest) ProtoMessage() {}

func (x *GenerateAppTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAppTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateAppTokenRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{94}
}

func (x *GenerateAppTokenRequest) GetAllowedMethods() []*AllowedMethod {
	if x != nil {
		return x.AllowedMethods
	}
	return nil
}

type GenerateAppTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppToken string `protobuf:"bytes,1,opt,name=appToken,proto3" json:"appToken,omitempty"`
}

func (x *GenerateAppTokenResponse) Reset() {
	*x = GenerateAppTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAppTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAppTokenResponse) ProtoMessage() {}

func (x *GenerateAppTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAppTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateAppTokenResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{95}
}

func (x *GenerateAppTokenResponse) GetAppToken() string {
	if x != nil {
		return x.AppToken
	}
	return ""
}

type RemoveDirOrFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *RemoveDirOrFileRequest) Reset() {
	*x = RemoveDirOrFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDirOrFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDirOrFileRequest) ProtoMessage() {}

func (x *RemoveDirOrFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDirOrFileRequest.ProtoReflect.Descriptor instead.
func (*RemoveDirOrFileRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{96}
}

func (x *RemoveDirOrFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RemoveDirOrFileRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type RemoveDirOrFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveDirOrFileResponse) Reset() {
	*x = RemoveDirOrFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDirOrFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDirOrFileResponse) ProtoMessage() {}

func (x *RemoveDirOrFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDirOrFileResponse.ProtoReflect.Descriptor instead.
func (*RemoveDirOrFileResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{97}
}

var File_space_proto protoreflect.FileDescriptor

var file_space_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x2a, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x67, 0x0a, 0x13, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x78, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x62, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x41,
	0x0a, 0x21, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x24, 0x0a, 0x22, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x75, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x4d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78,
	0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x45, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x42, 0x79, 0x4d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x73,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x42, 0x79, 0x4d, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xee, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72,
	0x6f, 0x67, 0x65, 0x55, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x6f, 0x67, 0x65, 0x55, 0x73, 0x65, 0x64, 0x12,
	0x2e, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x55, 0x73, 0x65, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55,
	0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x55, 0x73, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x61,
	0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x19, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x1c, 0x0a, 0x1a, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x1a, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x1d, 0x0a, 0x1b,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x6f, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22,
	0x44, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xcb, 0x03, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69,
	0x7a, 0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x70, 0x66, 0x73, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x66, 0x73, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x69, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x6e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69,
	0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x30, 0x0a, 0x13, 0x69, 0x73, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x18, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x2f, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x62, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x6e,
	0x6b, 0x22, 0x4e, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x22, 0x64, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6f, 0x6d, 0x69, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x4c, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x22, 0x7e, 0x0a, 0x0c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x22, 0xa3, 0x02, 0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x69, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x35, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x37, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0x3e, 0x0a, 0x20, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x56, 0x69, 0x61,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0x23, 0x0a, 0x21, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x56, 0x69, 0x61,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x96, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x05,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x62, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x54, 0x65, 0x78,
	0x74, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x51, 0x0a, 0x0f, 0x4f, 0x70, 0x65,
	0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x62, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x10,
	0x4f, 0x70, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x15,
	0x4f, 0x70, 0x65, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x16, 0x4f, 0x70, 0x65, 0x6e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6b, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x65, 0x0a, 0x0d, 0x41, 0x64,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0xd0, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x7d, 0x0a, 0x1d, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x20,
	0x0a, 0x1e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61,
	0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x7e, 0x0a, 0x1e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x42,
	0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4b, 0x65, 0x79,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x21, 0x0a, 0x1f, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x42,
	0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x19, 0x54, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x50,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x54, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x73,
	0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3c, 0x0a, 0x0a, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x2c, 0x0a, 0x12, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x48,
	0x0a, 0x13, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x2c, 0x0a, 0x12, 0x4a, 0x6f, 0x69, 0x6e,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x66, 0x0a, 0x1d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x46,
	0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x4a,
	0x0a, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x62, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x1f,
	0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x61, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x25, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x1d, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x74, 0x68,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x62, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x62,
	0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x43,
	0x69, 0x64, 0x22, 0x33, 0x0a, 0x11, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x75, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x22, 0x59, 0x0a, 0x11, 0x46, 0x75, 0x73, 0x65, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22, 0x50, 0x0a, 0x0a, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x36, 0x0a, 0x10, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x22, 0x6e, 0x0a, 0x11, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x2d, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x46, 0x75,
	0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x74, 0x68,
	0x73, 0x22, 0xc5, 0x03, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x3d, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x33, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x48, 0x00, 0x52, 0x10, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x48, 0x0a, 0x11, 0x72,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x41, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x5a, 0x0a, 0x1c, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x19, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x65, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x95, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x78,
	0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x65, 0x78, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73,
	0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x22, 0x29, 0x0a, 0x17, 0x52, 0x65, 0x61,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x4b, 0x0a,
	0x1f, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x74, 0x68, 0x54, 0x6f, 0x4b, 0x65, 0x79, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x74, 0x68, 0x54,
	0x6f, 0x4b, 0x65, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x22, 0x0a, 0x20, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48,
	0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4b, 0x65, 0x79,
	0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x61, 0x74, 0x68, 0x54, 0x6f, 0x4b, 0x65, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x74, 0x68, 0x54, 0x6f, 0x4b,
	0x65, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x41, 0x50, 0x49, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x41, 0x50, 0x49, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x62, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x75, 0x62, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57,
	0x69, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57,
	0x69, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x20, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2f, 0x0a, 0x0d, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x17,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x44, 0x0a,
	0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69, 0x72, 0x4f, 0x72, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69, 0x72,
	0x4f, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xea,
	0x01, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42, 0x41, 0x43,
	0x4b, 0x55, 0x50, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10,
	0x03, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x55,
	0x50, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52,
	0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10,
	0x06, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x44, 0x44, 0x45,
	0x44, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x5f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x4f, 0x4c, 0x44, 0x45,
	0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x09, 0x2a, 0x41, 0x0a, 0x0d, 0x4b,
	0x65, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4f,
	0x4f, 0x47, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x57, 0x49, 0x54, 0x54, 0x45,
	0x52, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x03, 0x2a, 0x4b,
	0x0a, 0x09, 0x46, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x6d, 0x0a, 0x10, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x4e, 0x56, 0x49, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x55, 0x53, 0x41, 0x47, 0x45, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10,
	0x49, 0x4e, 0x56, 0x49, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59,
	0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x44, 0x5f, 0x49, 0x4e,
	0x56, 0x49, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x2a, 0x3b, 0x0a, 0x10, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x32, 0xd2, 0x29, 0x0a, 0x08, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x41, 0x70, 0x69, 0x12, 0x6d, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f,
	0x61, 0x6c, 0x6c, 0x12, 0x63, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x72, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x12, 0x1d, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x65, 0x79, 0x70, 0x61, 0x69, 0x72, 0x73,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x12, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76,
	0x31, 0x2f, 0x6b, 0x65, 0x79, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x12, 0x9b, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x56, 0x69, 0x61, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x12, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x56, 0x69, 0x61, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69,
	0x72, 0x56, 0x69, 0x61, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x76,
	0x31, 0x2f, 0x6b, 0x65, 0x79, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x3a, 0x01,
	0x2a, 0x12, 0x6a, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x65, 0x79, 0x70, 0x61,
	0x69, 0x72, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x65, 0x79, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2f,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0x61, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x3a, 0x01, 0x2a, 0x12, 0x5f, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x69,
	0x6c, 0x65, 0x30, 0x01, 0x12, 0x68, 0x0a, 0x0c, 0x54, 0x78, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x30, 0x01, 0x12, 0x56,
	0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x44, 0x69, 0x72, 0x4f, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69, 0x72, 0x4f, 0x72, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69, 0x72, 0x4f, 0x72, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b,
	0x2a, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x9d, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x22, 0x2b, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x7d, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x7f, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x12, 0x77, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x42, 0x79, 0x4d, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x42, 0x79, 0x4d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x42, 0x79, 0x4d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x42, 0x79, 0x4d, 0x65, 0x12, 0x6b, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x12, 0x53, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12, 0x63, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x60, 0x0a, 0x0f,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x75, 0x73, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x12,
	0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x75,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x75, 0x73, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x58,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x75, 0x73, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x46, 0x75, 0x73, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08,
	0x2f, 0x76, 0x31, 0x2f, 0x66, 0x75, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x88, 0x01, 0x0a, 0x16, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x3a, 0x01, 0x2a, 0x12, 0x8c, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65,
	0x12, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x3a, 0x01, 0x2a, 0x12, 0x7a, 0x0a, 0x12, 0x54, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x50,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x50, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0x86, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4b,
	0x65, 0x79, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x23, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4b, 0x65, 0x79,
	0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x90, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x26, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73,
	0x2f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x6b, 0x0a, 0x0b, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x7d, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x67, 0x0a, 0x0a, 0x4a, 0x6f, 0x69, 0x6e,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2f, 0x7b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x7d, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x3a, 0x01,
	0x2a, 0x12, 0x8c, 0x01, 0x0a, 0x16, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x56,
	0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x3a, 0x01, 0x2a,
	0x12, 0x94, 0x01, 0x0a, 0x18, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x55, 0x6e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x91, 0x01, 0x0a, 0x15, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x7b, 0x0a, 0x15, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x6e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x7b, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x2f, 0x72, 0x65, 0x61, 0x64, 0x3a, 0x01, 0x2a,
	0x12, 0x68, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x70, 0x0a, 0x12, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x12, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x7b, 0x0a, 0x13,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x72,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x5a, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x69, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x12, 0x7e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x12, 0x23, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x6c, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x9a, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74,
	0x12, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65,
	0x6e, 0x41, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x5e,
	0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x8c,
	0x01, 0x0a, 0x18, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x6d, 0x0a,
	0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_space_proto_rawDescOnce sync.Once
	file_space_proto_rawDescData = file_space_proto_rawDesc
)

func file_space_proto_rawDescGZIP() []byte {
	file_space_proto_rawDescOnce.Do(func() {
		file_space_proto_rawDescData = protoimpl.X.CompressGZIP(file_space_proto_rawDescData)
	})
	return file_space_proto_rawDescData
}

var file_space_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_space_proto_msgTypes = make([]protoimpl.MessageInfo, 98)
var file_space_proto_goTypes = []interface{}{
	(EventType)(0),                             // 0: space.EventType
	(KeyBackupType)(0),                         // 1: space.KeyBackupType
	(FuseState)(0),                             // 2: space.FuseState
	(NotificationType)(0),                      // 3: space.NotificationType
	(InvitationStatus)(0),                      // 4: space.InvitationStatus
	(*SearchFilesRequest)(nil),                 // 5: space.SearchFilesRequest
	(*SearchFilesResponse)(nil),                // 6: space.SearchFilesResponse
	(*SearchFilesDirectoryEntry)(nil),          // 7: space.SearchFilesDirectoryEntry
	(*SetNotificationsLastSeenAtRequest)(nil),  // 8: space.SetNotificationsLastSeenAtRequest
	(*SetNotificationsLastSeenAtResponse)(nil), // 9: space.SetNotificationsLastSeenAtResponse
	(*GetSharedWithMeFilesRequest)(nil),        // 10: space.GetSharedWithMeFilesRequest
	(*GetSharedWithMeFilesResponse)(nil),       // 11: space.GetSharedWithMeFilesResponse
	(*GetSharedByMeFilesRequest)(nil),          // 12: space.GetSharedByMeFilesRequest
	(*GetSharedByMeFilesResponse)(nil),         // 13: space.GetSharedByMeFilesResponse
	(*GetUsageInfoRequest)(nil),                // 14: space.GetUsageInfoRequest
	(*GetUsageInfoResponse)(nil),               // 15: space.GetUsageInfoResponse
	(*ToggleBucketBackupRequest)(nil),          // 16: space.ToggleBucketBackupRequest
	(*ToggleBucketBackupResponse)(nil),         // 17: space.ToggleBucketBackupResponse
	(*BucketBackupRestoreRequest)(nil),         // 18: space.BucketBackupRestoreRequest
	(*BucketBackupRestoreResponse)(nil),        // 19: space.BucketBackupRestoreResponse
	(*ListDirectoriesRequest)(nil),             // 20: space.ListDirectoriesRequest
	(*FileMember)(nil),                         // 21: space.FileMember
	(*ListDirectoryEntry)(nil),                 // 22: space.ListDirectoryEntry
	(*SharedListDirectoryEntry)(nil),           // 23: space.SharedListDirectoryEntry
	(*ListDirectoriesResponse)(nil),            // 24: space.ListDirectoriesResponse
	(*ListDirectoryRequest)(nil),               // 25: space.ListDirectoryRequest
	(*ListDirectoryResponse)(nil),              // 26: space.ListDirectoryResponse
	(*CreateBucketRequest)(nil),                // 27: space.CreateBucketRequest
	(*BucketMember)(nil),                       // 28: space.BucketMember
	(*Bucket)(nil),                             // 29: space.Bucket
	(*CreateBucketResponse)(nil),               // 30: space.CreateBucketResponse
	(*GenerateKeyPairRequest)(nil),             // 31: space.GenerateKeyPairRequest
	(*GenerateKeyPairResponse)(nil),            // 32: space.GenerateKeyPairResponse
	(*GetStoredMnemonicRequest)(nil),           // 33: space.GetStoredMnemonicRequest
	(*GetStoredMnemonicResponse)(nil),          // 34: space.GetStoredMnemonicResponse
	(*RestoreKeyPairViaMnemonicRequest)(nil),   // 35: space.RestoreKeyPairViaMnemonicRequest
	(*RestoreKeyPairViaMnemonicResponse)(nil),  // 36: space.RestoreKeyPairViaMnemonicResponse
	(*FileEventResponse)(nil),                  // 37: space.FileEventResponse
	(*TextileEventResponse)(nil),               // 38: space.TextileEventResponse
	(*OpenFileRequest)(nil),                    // 39: space.OpenFileRequest
	(*OpenFileResponse)(nil),                   // 40: space.OpenFileResponse
	(*OpenPublicFileRequest)(nil),              // 41: space.OpenPublicFileRequest
	(*OpenPublicFileResponse)(nil),             // 42: space.OpenPublicFileResponse
	(*AddItemsRequest)(nil),                    // 43: space.AddItemsRequest
	(*AddItemResult)(nil),                      // 44: space.AddItemResult
	(*AddItemsResponse)(nil),                   // 45: space.AddItemsResponse
	(*CreateFolderRequest)(nil),                // 46: space.CreateFolderRequest
	(*CreateFolderResponse)(nil),               // 47: space.CreateFolderResponse
	(*BackupKeysByPassphraseRequest)(nil),      // 48: space.BackupKeysByPassphraseRequest
	(*BackupKeysByPassphraseResponse)(nil),     // 49: space.BackupKeysByPassphraseResponse
	(*RecoverKeysByPassphraseRequest)(nil),     // 50: space.RecoverKeysByPassphraseRequest
	(*RecoverKeysByPassphraseResponse)(nil),    // 51: space.RecoverKeysByPassphraseResponse
	(*TestKeysPassphraseRequest)(nil),          // 52: space.TestKeysPassphraseRequest
	(*TestKeysPassphraseResponse)(nil),         // 53: space.TestKeysPassphraseResponse
	(*ThreadInfo)(nil),                         // 54: space.ThreadInfo
	(*ShareBucketRequest)(nil),                 // 55: space.ShareBucketRequest
	(*ShareBucketResponse)(nil),                // 56: space.ShareBucketResponse
	(*JoinBucketRequest)(nil),                  // 57: space.JoinBucketRequest
	(*JoinBucketResponse)(nil),                 // 58: space.JoinBucketResponse
	(*ShareFilesViaPublicKeyRequest)(nil),      // 59: space.ShareFilesViaPublicKeyRequest
	(*FullPath)(nil),                           // 60: space.FullPath
	(*ShareFilesViaPublicKeyResponse)(nil),     // 61: space.ShareFilesViaPublicKeyResponse
	(*UnshareFilesViaPublicKeyRequest)(nil),    // 62: space.UnshareFilesViaPublicKeyRequest
	(*UnshareFilesViaPublicKeyResponse)(nil),   // 63: space.UnshareFilesViaPublicKeyResponse
	(*GeneratePublicFileLinkRequest)(nil),      // 64: space.GeneratePublicFileLinkRequest
	(*GeneratePublicFileLinkResponse)(nil),     // 65: space.GeneratePublicFileLinkResponse
	(*ToggleFuseRequest)(nil),                  // 66: space.ToggleFuseRequest
	(*FuseDriveResponse)(nil),                  // 67: space.FuseDriveResponse
	(*ListBucketsRequest)(nil),                 // 68: space.ListBucketsRequest
	(*ListBucketsResponse)(nil),                // 69: space.ListBucketsResponse
	(*Invitation)(nil),                         // 70: space.Invitation
	(*UsageAlert)(nil),                         // 71: space.UsageAlert
	(*InvitationAccept)(nil),                   // 72: space.InvitationAccept
	(*RevokedInvitation)(nil),                  // 73: space.RevokedInvitation
	(*Notification)(nil),                       // 74: space.Notification
	(*HandleFilesInvitationRequest)(nil),       // 75: space.HandleFilesInvitationRequest
	(*HandleFilesInvitationResponse)(nil),      // 76: space.HandleFilesInvitationResponse
	(*NotificationEventResponse)(nil),          // 77: space.NotificationEventResponse
	(*GetNotificationsRequest)(nil),            // 78: space.GetNotificationsRequest
	(*GetNotificationsResponse)(nil),           // 79: space.GetNotificationsResponse
	(*ReadNotificationRequest)(nil),            // 80: space.ReadNotificationRequest
	(*ReadNotificationResponse)(nil),           // 81: space.ReadNotificationResponse
	(*GetPublicKeyRequest)(nil),                // 82: space.GetPublicKeyRequest
	(*GetPublicKeyResponse)(nil),               // 83: space.GetPublicKeyResponse
	(*RecoverKeysByLocalBackupRequest)(nil),    // 84: space.RecoverKeysByLocalBackupRequest
	(*RecoverKeysByLocalBackupResponse)(nil),   // 85: space.RecoverKeysByLocalBackupResponse
	(*CreateLocalKeysBackupRequest)(nil),       // 86: space.CreateLocalKeysBackupRequest
	(*CreateLocalKeysBackupResponse)(nil),      // 87: space.CreateLocalKeysBackupResponse
	(*DeleteAccountRequest)(nil),               // 88: space.DeleteAccountRequest
	(*DeleteAccountResponse)(nil),              // 89: space.DeleteAccountResponse
	(*DeleteKeyPairRequest)(nil),               // 90: space.DeleteKeyPairRequest
	(*DeleteKeyPairResponse)(nil),              // 91: space.DeleteKeyPairResponse
	(*GetAPISessionTokensRequest)(nil),         // 92: space.GetAPISessionTokensRequest
	(*GetAPISessionTokensResponse)(nil),        // 93: space.GetAPISessionTokensResponse
	(*GetRecentlySharedWithRequest)(nil),       // 94: space.GetRecentlySharedWithRequest
	(*GetRecentlySharedWithResponse)(nil),      // 95: space.GetRecentlySharedWithResponse
	(*InitializeMasterAppTokenRequest)(nil),    // 96: space.InitializeMasterAppTokenRequest
	(*InitializeMasterAppTokenResponse)(nil),   // 97: space.InitializeMasterAppTokenResponse
	(*AllowedMethod)(nil),                      // 98: space.AllowedMethod
	(*GenerateAppTokenRequest)(nil),            // 99: space.GenerateAppTokenRequest
	(*GenerateAppTokenResponse)(nil),           // 100: space.GenerateAppTokenResponse
	(*RemoveDirOrFileRequest)(nil),             // 101: space.RemoveDirOrFileRequest
	(*RemoveDirOrFileResponse)(nil),            // 102: space.RemoveDirOrFileResponse
	(*empty.Empty)(nil),                        // 103: google.protobuf.Empty
}
var file_space_proto_depIdxs = []int32{
	7,   // 0: space.SearchFilesResponse.entries:type_name -> space.SearchFilesDirectoryEntry
	22,  // 1: space.SearchFilesDirectoryEntry.entry:type_name -> space.ListDirectoryEntry
	23,  // 2: space.GetSharedWithMeFilesResponse.items:type_name -> space.SharedListDirectoryEntry
	23,  // 3: space.GetSharedByMeFilesResponse.items:type_name -> space.SharedListDirectoryEntry
	21,  // 4: space.ListDirectoryEntry.members:type_name -> space.FileMember
	22,  // 5: space.SharedListDirectoryEntry.entry:type_name -> space.ListDirectoryEntry
	22,  // 6: space.ListDirectoriesResponse.entries:type_name -> space.ListDirectoryEntry
	22,  // 7: space.ListDirectoryResponse.entries:type_name -> space.ListDirectoryEntry
	28,  // 8: space.Bucket.members:type_name -> space.BucketMember
	29,  // 9: space.CreateBucketResponse.bucket:type_name -> space.Bucket
	0,   // 10: space.FileEventResponse.type:type_name -> space.EventType
	22,  // 11: space.FileEventResponse.entry:type_name -> space.ListDirectoryEntry
	44,  // 12: space.AddItemsResponse.result:type_name -> space.AddItemResult
	1,   // 13: space.BackupKeysByPassphraseRequest.type:type_name -> space.KeyBackupType
	1,   // 14: space.RecoverKeysByPassphraseRequest.type:type_name -> space.KeyBackupType
	54,  // 15: space.ShareBucketResponse.threadinfo:type_name -> space.ThreadInfo
	54,  // 16: space.JoinBucketRequest.threadinfo:type_name -> space.ThreadInfo
	60,  // 17: space.ShareFilesViaPublicKeyRequest.paths:type_name -> space.FullPath
	60,  // 18: space.UnshareFilesViaPublicKeyRequest.paths:type_name -> space.FullPath
	2,   // 19: space.FuseDriveResponse.state:type_name -> space.FuseState
	29,  // 20: space.ListBucketsResponse.buckets:type_name -> space.Bucket
	4,   // 21: space.Invitation.status:type_name -> space.InvitationStatus
	60,  // 22: space.Invitation.itemPaths:type_name -> space.FullPath
	60,  // 23: space.RevokedInvitation.itemPaths:type_name -> space.FullPath
	70,  // 24: space.Notification.invitationValue:type_name -> space.Invitation
	71,  // 25: space.Notification.usageAlert:type_name -> space.UsageAlert
	72,  // 26: space.Notification.invitationAccept:type_name -> space.InvitationAccept
	73,  // 27: space.Notification.revokedInvitation:type_name -> space.RevokedInvitation
	3,   // 28: space.Notification.type:type_name -> space.NotificationType
	74,  // 29: space.NotificationEventResponse.notification:type_name -> space.Notification
	74,  // 30: space.GetNotificationsResponse.notifications:type_name -> space.Notification
	21,  // 31: space.GetRecentlySharedWithResponse.members:type_name -> space.FileMember
	98,  // 32: space.GenerateAppTokenRequest.allowedMethods:type_name -> space.AllowedMethod
	20,  // 33: space.SpaceApi.ListDirectories:input_type -> space.ListDirectoriesRequest
	25,  // 34: space.SpaceApi.ListDirectory:input_type -> space.ListDirectoryRequest
	31,  // 35: space.SpaceApi.GenerateKeyPair:input_type -> space.GenerateKeyPairRequest
	33,  // 36: space.SpaceApi.GetStoredMnemonic:input_type -> space.GetStoredMnemonicRequest
	35,  // 37: space.SpaceApi.RestoreKeyPairViaMnemonic:input_type -> space.RestoreKeyPairViaMnemonicRequest
	90,  // 38: space.SpaceApi.DeleteKeyPair:input_type -> space.DeleteKeyPairRequest
	31,  // 39: space.SpaceApi.GenerateKeyPairWithForce:input_type -> space.GenerateKeyPairRequest
	82,  // 40: space.SpaceApi.GetPublicKey:input_type -> space.GetPublicKeyRequest
	103, // 41: space.SpaceApi.Subscribe:input_type -> google.protobuf.Empty
	103, // 42: space.SpaceApi.TxlSubscribe:input_type -> google.protobuf.Empty
	39,  // 43: space.SpaceApi.OpenFile:input_type -> space.OpenFileRequest
	101, // 44: space.SpaceApi.RemoveDirOrFile:input_type -> space.RemoveDirOrFileRequest
	64,  // 45: space.SpaceApi.GeneratePublicFileLink:input_type -> space.GeneratePublicFileLinkRequest
	10,  // 46: space.SpaceApi.GetSharedWithMeFiles:input_type -> space.GetSharedWithMeFilesRequest
	12,  // 47: space.SpaceApi.GetSharedByMeFiles:input_type -> space.GetSharedByMeFilesRequest
	41,  // 48: space.SpaceApi.OpenPublicFile:input_type -> space.OpenPublicFileRequest
	43,  // 49: space.SpaceApi.AddItems:input_type -> space.AddItemsRequest
	46,  // 50: space.SpaceApi.CreateFolder:input_type -> space.CreateFolderRequest
	66,  // 51: space.SpaceApi.ToggleFuseDrive:input_type -> space.ToggleFuseRequest
	103, // 52: space.SpaceApi.GetFuseDriveStatus:input_type -> google.protobuf.Empty
	27,  // 53: space.SpaceApi.CreateBucket:input_type -> space.CreateBucketRequest
	48,  // 54: space.SpaceApi.BackupKeysByPassphrase:input_type -> space.BackupKeysByPassphraseRequest
	50,  // 55: space.SpaceApi.RecoverKeysByPassphrase:input_type -> space.RecoverKeysByPassphraseRequest
	52,  // 56: space.SpaceApi.TestKeysPassphrase:input_type -> space.TestKeysPassphraseRequest
	86,  // 57: space.SpaceApi.CreateLocalKeysBackup:input_type -> space.CreateLocalKeysBackupRequest
	84,  // 58: space.SpaceApi.RecoverKeysByLocalBackup:input_type -> space.RecoverKeysByLocalBackupRequest
	55,  // 59: space.SpaceApi.ShareBucket:input_type -> space.ShareBucketRequest
	57,  // 60: space.SpaceApi.JoinBucket:input_type -> space.JoinBucketRequest
	59,  // 61: space.SpaceApi.ShareFilesViaPublicKey:input_type -> space.ShareFilesViaPublicKeyRequest
	62,  // 62: space.SpaceApi.UnshareFilesViaPublicKey:input_type -> space.UnshareFilesViaPublicKeyRequest
	75,  // 63: space.SpaceApi.HandleFilesInvitation:input_type -> space.HandleFilesInvitationRequest
	103, // 64: space.SpaceApi.NotificationSubscribe:input_type -> google.protobuf.Empty
	68,  // 65: space.SpaceApi.ListBuckets:input_type -> space.ListBucketsRequest
	78,  // 66: space.SpaceApi.GetNotifications:input_type -> space.GetNotificationsRequest
	80,  // 67: space.SpaceApi.ReadNotification:input_type -> space.ReadNotificationRequest
	88,  // 68: space.SpaceApi.DeleteAccount:input_type -> space.DeleteAccountRequest
	16,  // 69: space.SpaceApi.ToggleBucketBackup:input_type -> space.ToggleBucketBackupRequest
	18,  // 70: space.SpaceApi.BucketBackupRestore:input_type -> space.BucketBackupRestoreRequest
	14,  // 71: space.SpaceApi.GetUsageInfo:input_type -> space.GetUsageInfoRequest
	92,  // 72: space.SpaceApi.GetAPISessionTokens:input_type -> space.GetAPISessionTokensRequest
	94,  // 73: space.SpaceApi.GetRecentlySharedWith:input_type -> space.GetRecentlySharedWithRequest
	8,   // 74: space.SpaceApi.SetNotificationsLastSeenAt:input_type -> space.SetNotificationsLastSeenAtRequest
	5,   // 75: space.SpaceApi.SearchFiles:input_type -> space.SearchFilesRequest
	96,  // 76: space.SpaceApi.InitializeMasterAppToken:input_type -> space.InitializeMasterAppTokenRequest
	99,  // 77: space.SpaceApi.GenerateAppToken:input_type -> space.GenerateAppTokenRequest
	24,  // 78: space.SpaceApi.ListDirectories:output_type -> space.ListDirectoriesResponse
	26,  // 79: space.SpaceApi.ListDirectory:output_type -> space.ListDirectoryResponse
	32,  // 80: space.SpaceApi.GenerateKeyPair:output_type -> space.GenerateKeyPairResponse
	34,  // 81: space.SpaceApi.GetStoredMnemonic:output_type -> space.GetStoredMnemonicResponse
	36,  // 82: space.SpaceApi.RestoreKeyPairViaMnemonic:output_type -> space.RestoreKeyPairViaMnemonicResponse
	91,  // 83: space.SpaceApi.DeleteKeyPair:output_type -> space.DeleteKeyPairResponse
	32,  // 84: space.SpaceApi.GenerateKeyPairWithForce:output_type -> space.GenerateKeyPairResponse
	83,  // 85: space.SpaceApi.GetPublicKey:output_type -> space.GetPublicKeyResponse
	37,  // 86: space.SpaceApi.Subscribe:output_type -> space.FileEventResponse
	38,  // 87: space.SpaceApi.TxlSubscribe:output_type -> space.TextileEventResponse
	40,  // 88: space.SpaceApi.OpenFile:output_type -> space.OpenFileResponse
	102, // 89: space.SpaceApi.RemoveDirOrFile:output_type -> space.RemoveDirOrFileResponse
	65,  // 90: space.SpaceApi.GeneratePublicFileLink:output_type -> space.GeneratePublicFileLinkResponse
	11,  // 91: space.SpaceApi.GetSharedWithMeFiles:output_type -> space.GetSharedWithMeFilesResponse
	13,  // 92: space.SpaceApi.GetSharedByMeFiles:output_type -> space.GetSharedByMeFilesResponse
	42,  // 93: space.SpaceApi.OpenPublicFile:output_type -> space.OpenPublicFileResponse
	45,  // 94: space.SpaceApi.AddItems:output_type -> space.AddItemsResponse
	47,  // 95: space.SpaceApi.CreateFolder:output_type -> space.CreateFolderResponse
	67,  // 96: space.SpaceApi.ToggleFuseDrive:output_type -> space.FuseDriveResponse
	67,  // 97: space.SpaceApi.GetFuseDriveStatus:output_type -> space.FuseDriveResponse
	30,  // 98: space.SpaceApi.CreateBucket:output_type -> space.CreateBucketResponse
	49,  // 99: space.SpaceApi.BackupKeysByPassphrase:output_type -> space.BackupKeysByPassphraseResponse
	51,  // 100: space.SpaceApi.RecoverKeysByPassphrase:output_type -> space.RecoverKeysByPassphraseResponse
	53,  // 101: space.SpaceApi.TestKeysPassphrase:output_type -> space.TestKeysPassphraseResponse
	87,  // 102: space.SpaceApi.CreateLocalKeysBackup:output_type -> space.CreateLocalKeysBackupResponse
	85,  // 103: space.SpaceApi.RecoverKeysByLocalBackup:output_type -> space.RecoverKeysByLocalBackupResponse
	56,  // 104: space.SpaceApi.ShareBucket:output_type -> space.ShareBucketResponse
	58,  // 105: space.SpaceApi.JoinBucket:output_type -> space.JoinBucketResponse
	61,  // 106: space.SpaceApi.ShareFilesViaPublicKey:output_type -> space.ShareFilesViaPublicKeyResponse
	63,  // 107: space.SpaceApi.UnshareFilesViaPublicKey:output_type -> space.UnshareFilesViaPublicKeyResponse
	76,  // 108: space.SpaceApi.HandleFilesInvitation:output_type -> space.HandleFilesInvitationResponse
	77,  // 109: space.SpaceApi.NotificationSubscribe:output_type -> space.NotificationEventResponse
	69,  // 110: space.SpaceApi.ListBuckets:output_type -> space.ListBucketsResponse
	79,  // 111: space.SpaceApi.GetNotifications:output_type -> space.GetNotificationsResponse
	81,  // 112: space.SpaceApi.ReadNotification:output_type -> space.ReadNotificationResponse
	89,  // 113: space.SpaceApi.DeleteAccount:output_type -> space.DeleteAccountResponse
	17,  // 114: space.SpaceApi.ToggleBucketBackup:output_type -> space.ToggleBucketBackupResponse
	19,  // 115: space.SpaceApi.BucketBackupRestore:output_type -> space.BucketBackupRestoreResponse
	15,  // 116: space.SpaceApi.GetUsageInfo:output_type -> space.GetUsageInfoResponse
	93,  // 117: space.SpaceApi.GetAPISessionTokens:output_type -> space.GetAPISessionTokensResponse
	95,  // 118: space.SpaceApi.GetRecentlySharedWith:output_type -> space.GetRecentlySharedWithResponse
	9,   // 119: space.SpaceApi.SetNotificationsLastSeenAt:output_type -> space.SetNotificationsLastSeenAtResponse
	6,   // 120: space.SpaceApi.SearchFiles:output_type -> space.SearchFilesResponse
	97,  // 121: space.SpaceApi.InitializeMasterAppToken:output_type -> space.InitializeMasterAppTokenResponse
	100, // 122: space.SpaceApi.GenerateAppToken:output_type -> space.GenerateAppTokenResponse
	78,  // [78:123] is the sub-list for method output_type
	33,  // [33:78] is the sub-list for method input_type
	33,  // [33:33] is the sub-list for extension type_name
	33,  // [33:33] is the sub-list for extension extendee
	0,   // [0:33] is the sub-list for field type_name
}

func init() { file_space_proto_init() }
func file_space_proto_init() {
	if File_space_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_space_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFilesDirectoryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNotificationsLastSeenAtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNotificationsLastSeenAtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharedWithMeFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharedWithMeFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharedByMeFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharedByMeFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsageInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsageInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleBucketBackupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleBucketBackupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketBackupRestoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketBackupRestoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDirectoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDirectoryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SharedListDirectoryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDirectoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDirectoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDirectoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateKeyPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateKeyPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoredMnemonicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoredMnemonicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreKeyPairViaMnemonicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreKeyPairViaMnemonicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextileEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPublicFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPublicFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddItemResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFolderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupKeysByPassphraseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupKeysByPassphraseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverKeysByPassphraseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverKeysByPassphraseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestKeysPassphraseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestKeysPassphraseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFilesViaPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFilesViaPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareFilesViaPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareFilesViaPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePublicFileLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePublicFileLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleFuseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuseDriveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBucketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBucketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsageAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationAccept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokedInvitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleFilesInvitationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleFilesInvitationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverKeysByLocalBackupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverKeysByLocalBackupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocalKeysBackupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocalKeysBackupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKeyPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKeyPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAPISessionTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAPISessionTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentlySharedWithRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentlySharedWithResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeMasterAppTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeMasterAppTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowedMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAppTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAppTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDirOrFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDirOrFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_space_proto_msgTypes[69].OneofWrappers = []interface{}{
		(*Notification_InvitationValue)(nil),
		(*Notification_UsageAlert)(nil),
		(*Notification_InvitationAccept)(nil),
		(*Notification_RevokedInvitation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_space_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   98,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_space_proto_goTypes,
		DependencyIndexes: file_space_proto_depIdxs,
		EnumInfos:         file_space_proto_enumTypes,
		MessageInfos:      file_space_proto_msgTypes,
	}.Build()
	File_space_proto = out.File
	file_space_proto_rawDesc = nil
	file_space_proto_goTypes = nil
	file_space_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SpaceApiClient is the client API for SpaceApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpaceApiClient interface {
	// Get all folder or files in the default bucket. It fetches all subdirectories too.
	ListDirectories(ctx context.Context, in *ListDirectoriesRequest, opts ...grpc.CallOption) (*ListDirectoriesResponse, error)
	// Get the folder or files in the path directory.
	// Unlike ListDirectories, this only returns immediate children at path.
	ListDirectory(ctx context.Context, in *ListDirectoryRequest, opts ...grpc.CallOption) (*ListDirectoryResponse, error)
	// Generate Key Pair for current account.
	// This will return error if daemon account already has keypairs
	GenerateKeyPair(ctx context.Context, in *GenerateKeyPairRequest, opts ...grpc.CallOption) (*GenerateKeyPairResponse, error)
	GetStoredMnemonic(ctx context.Context, in *GetStoredMnemonicRequest, opts ...grpc.CallOption) (*GetStoredMnemonicResponse, error)
	// Restores a keypair given a mnemonic.
	// This will override any existing key pair
	RestoreKeyPairViaMnemonic(ctx context.Context, in *RestoreKeyPairViaMnemonicRequest, opts ...grpc.CallOption) (*RestoreKeyPairViaMnemonicResponse, error)
	DeleteKeyPair(ctx context.Context, in *DeleteKeyPairRequest, opts ...grpc.CallOption) (*DeleteKeyPairResponse, error)
	// Force Generation of KeyPair. This will override existing keys stored in daemon.
	GenerateKeyPairWithForce(ctx context.Context, in *GenerateKeyPairRequest, opts ...grpc.CallOption) (*GenerateKeyPairResponse, error)
	GetPublicKey(ctx context.Context, in *GetPublicKeyRequest, opts ...grpc.CallOption) (*GetPublicKeyResponse, error)
	// Subscribe to file events. This streams responses to the caller
	Subscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SpaceApi_SubscribeClient, error)
	// Subscribe to textile events. This streams responses to the caller
	TxlSubscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SpaceApi_TxlSubscribeClient, error)
	// Open a file in the daemon.
	// Daemon keeps track of all open files and closes them if no activity is noticed after a while
	OpenFile(ctx context.Context, in *OpenFileRequest, opts ...grpc.CallOption) (*OpenFileResponse, error)
	// Removes a file or dir from a bucket
	RemoveDirOrFile(ctx context.Context, in *RemoveDirOrFileRequest, opts ...grpc.CallOption) (*RemoveDirOrFileResponse, error)
	// Generates a copy of the file that's accessible through IPFS gateways
	GeneratePublicFileLink(ctx context.Context, in *GeneratePublicFileLinkRequest, opts ...grpc.CallOption) (*GeneratePublicFileLinkResponse, error)
	// Gets the files that are shared with this recipient
	GetSharedWithMeFiles(ctx context.Context, in *GetSharedWithMeFilesRequest, opts ...grpc.CallOption) (*GetSharedWithMeFilesResponse, error)
	// Gets the files that are shared by the sender
	GetSharedByMeFiles(ctx context.Context, in *GetSharedByMeFilesRequest, opts ...grpc.CallOption) (*GetSharedByMeFilesResponse, error)
	// Open an encrypted public shared file in the daemon.
	// This requires the decryption key and file hash/cid to work
	OpenPublicFile(ctx context.Context, in *OpenPublicFileRequest, opts ...grpc.CallOption) (*OpenPublicFileResponse, error)
	// Adds items (files/folders) to be uploaded to the bucket.
	AddItems(ctx context.Context, in *AddItemsRequest, opts ...grpc.CallOption) (SpaceApi_AddItemsClient, error)
	// Creates a folder/directory at the specified path
	CreateFolder(ctx context.Context, in *CreateFolderRequest, opts ...grpc.CallOption) (*CreateFolderResponse, error)
	// Toggle FUSE drive to be mounted or unmounted
	ToggleFuseDrive(ctx context.Context, in *ToggleFuseRequest, opts ...grpc.CallOption) (*FuseDriveResponse, error)
	// Get status of FUSE drive. If mounted or unmounted
	GetFuseDriveStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FuseDriveResponse, error)
	// Create a new bucket owned by current user (aka keypair)
	CreateBucket(ctx context.Context, in *CreateBucketRequest, opts ...grpc.CallOption) (*CreateBucketResponse, error)
	// Backup Key by Passphrase
	BackupKeysByPassphrase(ctx context.Context, in *BackupKeysByPassphraseRequest, opts ...grpc.CallOption) (*BackupKeysByPassphraseResponse, error)
	// Recover Keys by Passphrase
	RecoverKeysByPassphrase(ctx context.Context, in *RecoverKeysByPassphraseRequest, opts ...grpc.CallOption) (*RecoverKeysByPassphraseResponse, error)
	// Tests a passphrase to see if it matches the one previously used
	TestKeysPassphrase(ctx context.Context, in *TestKeysPassphraseRequest, opts ...grpc.CallOption) (*TestKeysPassphraseResponse, error)
	CreateLocalKeysBackup(ctx context.Context, in *CreateLocalKeysBackupRequest, opts ...grpc.CallOption) (*CreateLocalKeysBackupResponse, error)
	RecoverKeysByLocalBackup(ctx context.Context, in *RecoverKeysByLocalBackupRequest, opts ...grpc.CallOption) (*RecoverKeysByLocalBackupResponse, error)
	// Share bucket
	ShareBucket(ctx context.Context, in *ShareBucketRequest, opts ...grpc.CallOption) (*ShareBucketResponse, error)
	// Join bucket
	JoinBucket(ctx context.Context, in *JoinBucketRequest, opts ...grpc.CallOption) (*JoinBucketResponse, error)
	// Share bucket via public key using Textile Hub inboxing
	ShareFilesViaPublicKey(ctx context.Context, in *ShareFilesViaPublicKeyRequest, opts ...grpc.CallOption) (*ShareFilesViaPublicKeyResponse, error)
	// Remove public keys for shared files in buckets
	UnshareFilesViaPublicKey(ctx context.Context, in *UnshareFilesViaPublicKeyRequest, opts ...grpc.CallOption) (*UnshareFilesViaPublicKeyResponse, error)
	HandleFilesInvitation(ctx context.Context, in *HandleFilesInvitationRequest, opts ...grpc.CallOption) (*HandleFilesInvitationResponse, error)
	NotificationSubscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SpaceApi_NotificationSubscribeClient, error)
	ListBuckets(ctx context.Context, in *ListBucketsRequest, opts ...grpc.CallOption) (*ListBucketsResponse, error)
	GetNotifications(ctx context.Context, in *GetNotificationsRequest, opts ...grpc.CallOption) (*GetNotificationsResponse, error)
	ReadNotification(ctx context.Context, in *ReadNotificationRequest, opts ...grpc.CallOption) (*ReadNotificationResponse, error)
	DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*DeleteAccountResponse, error)
	ToggleBucketBackup(ctx context.Context, in *ToggleBucketBackupRequest, opts ...grpc.CallOption) (*ToggleBucketBackupResponse, error)
	BucketBackupRestore(ctx context.Context, in *BucketBackupRestoreRequest, opts ...grpc.CallOption) (*BucketBackupRestoreResponse, error)
	GetUsageInfo(ctx context.Context, in *GetUsageInfoRequest, opts ...grpc.CallOption) (*GetUsageInfoResponse, error)
	GetAPISessionTokens(ctx context.Context, in *GetAPISessionTokensRequest, opts ...grpc.CallOption) (*GetAPISessionTokensResponse, error)
	// Returns a list of addresses / public keys of clients to which files where shared or received, ordered by date
	GetRecentlySharedWith(ctx context.Context, in *GetRecentlySharedWithRequest, opts ...grpc.CallOption) (*GetRecentlySharedWithResponse, error)
	// This will set the last read timestamp for the user so that the client
	// can check if newer notifications are present for UX
	SetNotificationsLastSeenAt(ctx context.Context, in *SetNotificationsLastSeenAtRequest, opts ...grpc.CallOption) (*SetNotificationsLastSeenAtResponse, error)
	// Search for files across all users bucket
	SearchFiles(ctx context.Context, in *SearchFilesRequest, opts ...grpc.CallOption) (*SearchFilesResponse, error)
	// Initialize master app token
	// App tokens are used to authorize scoped access to a range of methods
	// Master token can only be generated once and has access to all methods
	InitializeMasterAppToken(ctx context.Context, in *InitializeMasterAppTokenRequest, opts ...grpc.CallOption) (*InitializeMasterAppTokenResponse, error)
	// Generates an app token with scoped access.
	GenerateAppToken(ctx context.Context, in *GenerateAppTokenRequest, opts ...grpc.CallOption) (*GenerateAppTokenResponse, error)
}

type spaceApiClient struct {
	cc grpc.ClientConnInterface
}

func NewSpaceApiClient(cc grpc.ClientConnInterface) SpaceApiClient {
	return &spaceApiClient{cc}
}

func (c *spaceApiClient) ListDirectories(ctx context.Context, in *ListDirectoriesRequest, opts ...grpc.CallOption) (*ListDirectoriesResponse, error) {
	out := new(ListDirectoriesResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ListDirectories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) ListDirectory(ctx context.Context, in *ListDirectoryRequest, opts ...grpc.CallOption) (*ListDirectoryResponse, error) {
	out := new(ListDirectoryResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ListDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GenerateKeyPair(ctx context.Context, in *GenerateKeyPairRequest, opts ...grpc.CallOption) (*GenerateKeyPairResponse, error) {
	out := new(GenerateKeyPairResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GenerateKeyPair", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GetStoredMnemonic(ctx context.Context, in *GetStoredMnemonicRequest, opts ...grpc.CallOption) (*GetStoredMnemonicResponse, error) {
	out := new(GetStoredMnemonicResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GetStoredMnemonic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) RestoreKeyPairViaMnemonic(ctx context.Context, in *RestoreKeyPairViaMnemonicRequest, opts ...grpc.CallOption) (*RestoreKeyPairViaMnemonicResponse, error) {
	out := new(RestoreKeyPairViaMnemonicResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/RestoreKeyPairViaMnemonic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) DeleteKeyPair(ctx context.Context, in *DeleteKeyPairRequest, opts ...grpc.CallOption) (*DeleteKeyPairResponse, error) {
	out := new(DeleteKeyPairResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/DeleteKeyPair", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GenerateKeyPairWithForce(ctx context.Context, in *GenerateKeyPairRequest, opts ...grpc.CallOption) (*GenerateKeyPairResponse, error) {
	out := new(GenerateKeyPairResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GenerateKeyPairWithForce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GetPublicKey(ctx context.Context, in *GetPublicKeyRequest, opts ...grpc.CallOption) (*GetPublicKeyResponse, error) {
	out := new(GetPublicKeyResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GetPublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) Subscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SpaceApi_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SpaceApi_serviceDesc.Streams[0], "/space.SpaceApi/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &spaceApiSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SpaceApi_SubscribeClient interface {
	Recv() (*FileEventResponse, error)
	grpc.ClientStream
}

type spaceApiSubscribeClient struct {
	grpc.ClientStream
}

func (x *spaceApiSubscribeClient) Recv() (*FileEventResponse, error) {
	m := new(FileEventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *spaceApiClient) TxlSubscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SpaceApi_TxlSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SpaceApi_serviceDesc.Streams[1], "/space.SpaceApi/TxlSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &spaceApiTxlSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SpaceApi_TxlSubscribeClient interface {
	Recv() (*TextileEventResponse, error)
	grpc.ClientStream
}

type spaceApiTxlSubscribeClient struct {
	grpc.ClientStream
}

func (x *spaceApiTxlSubscribeClient) Recv() (*TextileEventResponse, error) {
	m := new(TextileEventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *spaceApiClient) OpenFile(ctx context.Context, in *OpenFileRequest, opts ...grpc.CallOption) (*OpenFileResponse, error) {
	out := new(OpenFileResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/OpenFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) RemoveDirOrFile(ctx context.Context, in *RemoveDirOrFileRequest, opts ...grpc.CallOption) (*RemoveDirOrFileResponse, error) {
	out := new(RemoveDirOrFileResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/RemoveDirOrFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GeneratePublicFileLink(ctx context.Context, in *GeneratePublicFileLinkRequest, opts ...grpc.CallOption) (*GeneratePublicFileLinkResponse, error) {
	out := new(GeneratePublicFileLinkResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GeneratePublicFileLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GetSharedWithMeFiles(ctx context.Context, in *GetSharedWithMeFilesRequest, opts ...grpc.CallOption) (*GetSharedWithMeFilesResponse, error) {
	out := new(GetSharedWithMeFilesResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GetSharedWithMeFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GetSharedByMeFiles(ctx context.Context, in *GetSharedByMeFilesRequest, opts ...grpc.CallOption) (*GetSharedByMeFilesResponse, error) {
	out := new(GetSharedByMeFilesResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GetSharedByMeFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) OpenPublicFile(ctx context.Context, in *OpenPublicFileRequest, opts ...grpc.CallOption) (*OpenPublicFileResponse, error) {
	out := new(OpenPublicFileResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/OpenPublicFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) AddItems(ctx context.Context, in *AddItemsRequest, opts ...grpc.CallOption) (SpaceApi_AddItemsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SpaceApi_serviceDesc.Streams[2], "/space.SpaceApi/AddItems", opts...)
	if err != nil {
		return nil, err
	}
	x := &spaceApiAddItemsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SpaceApi_AddItemsClient interface {
	Recv() (*AddItemsResponse, error)
	grpc.ClientStream
}

type spaceApiAddItemsClient struct {
	grpc.ClientStream
}

func (x *spaceApiAddItemsClient) Recv() (*AddItemsResponse, error) {
	m := new(AddItemsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *spaceApiClient) CreateFolder(ctx context.Context, in *CreateFolderRequest, opts ...grpc.CallOption) (*CreateFolderResponse, error) {
	out := new(CreateFolderResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/CreateFolder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) ToggleFuseDrive(ctx context.Context, in *ToggleFuseRequest, opts ...grpc.CallOption) (*FuseDriveResponse, error) {
	out := new(FuseDriveResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ToggleFuseDrive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GetFuseDriveStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FuseDriveResponse, error) {
	out := new(FuseDriveResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GetFuseDriveStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) CreateBucket(ctx context.Context, in *CreateBucketRequest, opts ...grpc.CallOption) (*CreateBucketResponse, error) {
	out := new(CreateBucketResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/CreateBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) BackupKeysByPassphrase(ctx context.Context, in *BackupKeysByPassphraseRequest, opts ...grpc.CallOption) (*BackupKeysByPassphraseResponse, error) {
	out := new(BackupKeysByPassphraseResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/BackupKeysByPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) RecoverKeysByPassphrase(ctx context.Context, in *RecoverKeysByPassphraseRequest, opts ...grpc.CallOption) (*RecoverKeysByPassphraseResponse, error) {
	out := new(RecoverKeysByPassphraseResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/RecoverKeysByPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) TestKeysPassphrase(ctx context.Context, in *TestKeysPassphraseRequest, opts ...grpc.CallOption) (*TestKeysPassphraseResponse, error) {
	out := new(TestKeysPassphraseResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/TestKeysPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) CreateLocalKeysBackup(ctx context.Context, in *CreateLocalKeysBackupRequest, opts ...grpc.CallOption) (*CreateLocalKeysBackupResponse, error) {
	out := new(CreateLocalKeysBackupResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/CreateLocalKeysBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) RecoverKeysByLocalBackup(ctx context.Context, in *RecoverKeysByLocalBackupRequest, opts ...grpc.CallOption) (*RecoverKeysByLocalBackupResponse, error) {
	out := new(RecoverKeysByLocalBackupResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/RecoverKeysByLocalBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) ShareBucket(ctx context.Context, in *ShareBucketRequest, opts ...grpc.CallOption) (*ShareBucketResponse, error) {
	out := new(ShareBucketResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ShareBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) JoinBucket(ctx context.Context, in *JoinBucketRequest, opts ...grpc.CallOption) (*JoinBucketResponse, error) {
	out := new(JoinBucketResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/JoinBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) ShareFilesViaPublicKey(ctx context.Context, in *ShareFilesViaPublicKeyRequest, opts ...grpc.CallOption) (*ShareFilesViaPublicKeyResponse, error) {
	out := new(ShareFilesViaPublicKeyResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ShareFilesViaPublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) UnshareFilesViaPublicKey(ctx context.Context, in *UnshareFilesViaPublicKeyRequest, opts ...grpc.CallOption) (*UnshareFilesViaPublicKeyResponse, error) {
	out := new(UnshareFilesViaPublicKeyResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/UnshareFilesViaPublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) HandleFilesInvitation(ctx context.Context, in *HandleFilesInvitationRequest, opts ...grpc.CallOption) (*HandleFilesInvitationResponse, error) {
	out := new(HandleFilesInvitationResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/HandleFilesInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) NotificationSubscribe(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SpaceApi_NotificationSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SpaceApi_serviceDesc.Streams[3], "/space.SpaceApi/NotificationSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &spaceApiNotificationSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SpaceApi_NotificationSubscribeClient interface {
	Recv() (*NotificationEventResponse, error)
	grpc.ClientStream
}

type spaceApiNotificationSubscribeClient struct {
	grpc.ClientStream
}

func (x *spaceApiNotificationSubscribeClient) Recv() (*NotificationEventResponse, error) {
	m := new(NotificationEventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *spaceApiClient) ListBuckets(ctx context.Context, in *ListBucketsRequest, opts ...grpc.CallOption) (*ListBucketsResponse, error) {
	out := new(ListBucketsResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ListBuckets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GetNotifications(ctx context.Context, in *GetNotificationsRequest, opts ...grpc.CallOption) (*GetNotificationsResponse, error) {
	out := new(GetNotificationsResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GetNotifications", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) ReadNotification(ctx context.Context, in *ReadNotificationRequest, opts ...grpc.CallOption) (*ReadNotificationResponse, error) {
	out := new(ReadNotificationResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ReadNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*DeleteAccountResponse, error) {
	out := new(DeleteAccountResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/DeleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) ToggleBucketBackup(ctx context.Context, in *ToggleBucketBackupRequest, opts ...grpc.CallOption) (*ToggleBucketBackupResponse, error) {
	out := new(ToggleBucketBackupResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/ToggleBucketBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) BucketBackupRestore(ctx context.Context, in *BucketBackupRestoreRequest, opts ...grpc.CallOption) (*BucketBackupRestoreResponse, error) {
	out := new(BucketBackupRestoreResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/BucketBackupRestore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GetUsageInfo(ctx context.Context, in *GetUsageInfoRequest, opts ...grpc.CallOption) (*GetUsageInfoResponse, error) {
	out := new(GetUsageInfoResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GetUsageInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GetAPISessionTokens(ctx context.Context, in *GetAPISessionTokensRequest, opts ...grpc.CallOption) (*GetAPISessionTokensResponse, error) {
	out := new(GetAPISessionTokensResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GetAPISessionTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GetRecentlySharedWith(ctx context.Context, in *GetRecentlySharedWithRequest, opts ...grpc.CallOption) (*GetRecentlySharedWithResponse, error) {
	out := new(GetRecentlySharedWithResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GetRecentlySharedWith", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) SetNotificationsLastSeenAt(ctx context.Context, in *SetNotificationsLastSeenAtRequest, opts ...grpc.CallOption) (*SetNotificationsLastSeenAtResponse, error) {
	out := new(SetNotificationsLastSeenAtResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/SetNotificationsLastSeenAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) SearchFiles(ctx context.Context, in *SearchFilesRequest, opts ...grpc.CallOption) (*SearchFilesResponse, error) {
	out := new(SearchFilesResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/SearchFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) InitializeMasterAppToken(ctx context.Context, in *InitializeMasterAppTokenRequest, opts ...grpc.CallOption) (*InitializeMasterAppTokenResponse, error) {
	out := new(InitializeMasterAppTokenResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/InitializeMasterAppToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceApiClient) GenerateAppToken(ctx context.Context, in *GenerateAppTokenRequest, opts ...grpc.CallOption) (*GenerateAppTokenResponse, error) {
	out := new(GenerateAppTokenResponse)
	err := c.cc.Invoke(ctx, "/space.SpaceApi/GenerateAppToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpaceApiServer is the server API for SpaceApi service.
type SpaceApiServer interface {
	// Get all folder or files in the default bucket. It fetches all subdirectories too.
	ListDirectories(context.Context, *ListDirectoriesRequest) (*ListDirectoriesResponse, error)
	// Get the folder or files in the path directory.
	// Unlike ListDirectories, this only returns immediate children at path.
	ListDirectory(context.Context, *ListDirectoryRequest) (*ListDirectoryResponse, error)
	// Generate Key Pair for current account.
	// This will return error if daemon account already has keypairs
	GenerateKeyPair(context.Context, *GenerateKeyPairRequest) (*GenerateKeyPairResponse, error)
	GetStoredMnemonic(context.Context, *GetStoredMnemonicRequest) (*GetStoredMnemonicResponse, error)
	// Restores a keypair given a mnemonic.
	// This will override any existing key pair
	RestoreKeyPairViaMnemonic(context.Context, *RestoreKeyPairViaMnemonicRequest) (*RestoreKeyPairViaMnemonicResponse, error)
	DeleteKeyPair(context.Context, *DeleteKeyPairRequest) (*DeleteKeyPairResponse, error)
	// Force Generation of KeyPair. This will override existing keys stored in daemon.
	GenerateKeyPairWithForce(context.Context, *GenerateKeyPairRequest) (*GenerateKeyPairResponse, error)
	GetPublicKey(context.Context, *GetPublicKeyRequest) (*GetPublicKeyResponse, error)
	// Subscribe to file events. This streams responses to the caller
	Subscribe(*empty.Empty, SpaceApi_SubscribeServer) error
	// Subscribe to textile events. This streams responses to the caller
	TxlSubscribe(*empty.Empty, SpaceApi_TxlSubscribeServer) error
	// Open a file in the daemon.
	// Daemon keeps track of all open files and closes them if no activity is noticed after a while
	OpenFile(context.Context, *OpenFileRequest) (*OpenFileResponse, error)
	// Removes a file or dir from a bucket
	RemoveDirOrFile(context.Context, *RemoveDirOrFileRequest) (*RemoveDirOrFileResponse, error)
	// Generates a copy of the file that's accessible through IPFS gateways
	GeneratePublicFileLink(context.Context, *GeneratePublicFileLinkRequest) (*GeneratePublicFileLinkResponse, error)
	// Gets the files that are shared with this recipient
	GetSharedWithMeFiles(context.Context, *GetSharedWithMeFilesRequest) (*GetSharedWithMeFilesResponse, error)
	// Gets the files that are shared by the sender
	GetSharedByMeFiles(context.Context, *GetSharedByMeFilesRequest) (*GetSharedByMeFilesResponse, error)
	// Open an encrypted public shared file in the daemon.
	// This requires the decryption key and file hash/cid to work
	OpenPublicFile(context.Context, *OpenPublicFileRequest) (*OpenPublicFileResponse, error)
	// Adds items (files/folders) to be uploaded to the bucket.
	AddItems(*AddItemsRequest, SpaceApi_AddItemsServer) error
	// Creates a folder/directory at the specified path
	CreateFolder(context.Context, *CreateFolderRequest) (*CreateFolderResponse, error)
	// Toggle FUSE drive to be mounted or unmounted
	ToggleFuseDrive(context.Context, *ToggleFuseRequest) (*FuseDriveResponse, error)
	// Get status of FUSE drive. If mounted or unmounted
	GetFuseDriveStatus(context.Context, *empty.Empty) (*FuseDriveResponse, error)
	// Create a new bucket owned by current user (aka keypair)
	CreateBucket(context.Context, *CreateBucketRequest) (*CreateBucketResponse, error)
	// Backup Key by Passphrase
	BackupKeysByPassphrase(context.Context, *BackupKeysByPassphraseRequest) (*BackupKeysByPassphraseResponse, error)
	// Recover Keys by Passphrase
	RecoverKeysByPassphrase(context.Context, *RecoverKeysByPassphraseRequest) (*RecoverKeysByPassphraseResponse, error)
	// Tests a passphrase to see if it matches the one previously used
	TestKeysPassphrase(context.Context, *TestKeysPassphraseRequest) (*TestKeysPassphraseResponse, error)
	CreateLocalKeysBackup(context.Context, *CreateLocalKeysBackupRequest) (*CreateLocalKeysBackupResponse, error)
	RecoverKeysByLocalBackup(context.Context, *RecoverKeysByLocalBackupRequest) (*RecoverKeysByLocalBackupResponse, error)
	// Share bucket
	ShareBucket(context.Context, *ShareBucketRequest) (*ShareBucketResponse, error)
	// Join bucket
	JoinBucket(context.Context, *JoinBucketRequest) (*JoinBucketResponse, error)
	// Share bucket via public key using Textile Hub inboxing
	ShareFilesViaPublicKey(context.Context, *ShareFilesViaPublicKeyRequest) (*ShareFilesViaPublicKeyResponse, error)
	// Remove public keys for shared files in buckets
	UnshareFilesViaPublicKey(context.Context, *UnshareFilesViaPublicKeyRequest) (*UnshareFilesViaPublicKeyResponse, error)
	HandleFilesInvitation(context.Context, *HandleFilesInvitationRequest) (*HandleFilesInvitationResponse, error)
	NotificationSubscribe(*empty.Empty, SpaceApi_NotificationSubscribeServer) error
	ListBuckets(context.Context, *ListBucketsRequest) (*ListBucketsResponse, error)
	GetNotifications(context.Context, *GetNotificationsRequest) (*GetNotificationsResponse, error)
	ReadNotification(context.Context, *ReadNotificationRequest) (*ReadNotificationResponse, error)
	DeleteAccount(context.Context, *DeleteAccountRequest) (*DeleteAccountResponse, error)
	ToggleBucketBackup(context.Context, *ToggleBucketBackupRequest) (*ToggleBucketBackupResponse, error)
	BucketBackupRestore(context.Context, *BucketBackupRestoreRequest) (*BucketBackupRestoreResponse, error)
	GetUsageInfo(context.Context, *GetUsageInfoRequest) (*GetUsageInfoResponse, error)
	GetAPISessionTokens(context.Context, *GetAPISessionTokensRequest) (*GetAPISessionTokensResponse, error)
	// Returns a list of addresses / public keys of clients to which files where shared or received, ordered by date
	GetRecentlySharedWith(context.Context, *GetRecentlySharedWithRequest) (*GetRecentlySharedWithResponse, error)
	// This will set the last read timestamp for the user so that the client
	// can check if newer notifications are present for UX
	SetNotificationsLastSeenAt(context.Context, *SetNotificationsLastSeenAtRequest) (*SetNotificationsLastSeenAtResponse, error)
	// Search for files across all users bucket
	SearchFiles(context.Context, *SearchFilesRequest) (*SearchFilesResponse, error)
	// Initialize master app token
	// App tokens are used to authorize scoped access to a range of methods
	// Master token can only be generated once and has access to all methods
	InitializeMasterAppToken(context.Context, *InitializeMasterAppTokenRequest) (*InitializeMasterAppTokenResponse, error)
	// Generates an app token with scoped access.
	GenerateAppToken(context.Context, *GenerateAppTokenRequest) (*GenerateAppTokenResponse, error)
}

// UnimplementedSpaceApiServer can be embedded to have forward compatible implementations.
type UnimplementedSpaceApiServer struct {
}

func (*UnimplementedSpaceApiServer) ListDirectories(context.Context, *ListDirectoriesRequest) (*ListDirectoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDirectories not implemented")
}
func (*UnimplementedSpaceApiServer) ListDirectory(context.Context, *ListDirectoryRequest) (*ListDirectoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDirectory not implemented")
}
func (*UnimplementedSpaceApiServer) GenerateKeyPair(context.Context, *GenerateKeyPairRequest) (*GenerateKeyPairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateKeyPair not implemented")
}
func (*UnimplementedSpaceApiServer) GetStoredMnemonic(context.Context, *GetStoredMnemonicRequest) (*GetStoredMnemonicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStoredMnemonic not implemented")
}
func (*UnimplementedSpaceApiServer) RestoreKeyPairViaMnemonic(context.Context, *RestoreKeyPairViaMnemonicRequest) (*RestoreKeyPairViaMnemonicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestoreKeyPairViaMnemonic not implemented")
}
func (*UnimplementedSpaceApiServer) DeleteKeyPair(context.Context, *DeleteKeyPairRequest) (*DeleteKeyPairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteKeyPair not implemented")
}
func (*UnimplementedSpaceApiServer) GenerateKeyPairWithForce(context.Context, *GenerateKeyPairRequest) (*GenerateKeyPairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateKeyPairWithForce not implemented")
}
func (*UnimplementedSpaceApiServer) GetPublicKey(context.Context, *GetPublicKeyRequest) (*GetPublicKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPublicKey not implemented")
}
func (*UnimplementedSpaceApiServer) Subscribe(*empty.Empty, SpaceApi_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedSpaceApiServer) TxlSubscribe(*empty.Empty, SpaceApi_TxlSubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method TxlSubscribe not implemented")
}
func (*UnimplementedSpaceApiServer) OpenFile(context.Context, *OpenFileRequest) (*OpenFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenFile not implemented")
}
func (*UnimplementedSpaceApiServer) RemoveDirOrFile(context.Context, *RemoveDirOrFileRequest) (*RemoveDirOrFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDirOrFile not implemented")
}
func (*UnimplementedSpaceApiServer) GeneratePublicFileLink(context.Context, *GeneratePublicFileLinkRequest) (*GeneratePublicFileLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GeneratePublicFileLink not implemented")
}
func (*UnimplementedSpaceApiServer) GetSharedWithMeFiles(context.Context, *GetSharedWithMeFilesRequest) (*GetSharedWithMeFilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSharedWithMeFiles not implemented")
}
func (*UnimplementedSpaceApiServer) GetSharedByMeFiles(context.Context, *GetSharedByMeFilesRequest) (*GetSharedByMeFilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSharedByMeFiles not implemented")
}
func (*UnimplementedSpaceApiServer) OpenPublicFile(context.Context, *OpenPublicFileRequest) (*OpenPublicFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenPublicFile not implemented")
}
func (*UnimplementedSpaceApiServer) AddItems(*AddItemsRequest, SpaceApi_AddItemsServer) error {
	return status.Errorf(codes.Unimplemented, "method AddItems not implemented")
}
func (*UnimplementedSpaceApiServer) CreateFolder(context.Context, *CreateFolderRequest) (*CreateFolderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFolder not implemented")
}
func (*UnimplementedSpaceApiServer) ToggleFuseDrive(context.Context, *ToggleFuseRequest) (*FuseDriveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleFuseDrive not implemented")
}
func (*UnimplementedSpaceApiServer) GetFuseDriveStatus(context.Context, *empty.Empty) (*FuseDriveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFuseDriveStatus not implemented")
}
func (*UnimplementedSpaceApiServer) CreateBucket(context.Context, *CreateBucketRequest) (*CreateBucketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBucket not implemented")
}
func (*UnimplementedSpaceApiServer) BackupKeysByPassphrase(context.Context, *BackupKeysByPassphraseRequest) (*BackupKeysByPassphraseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BackupKeysByPassphrase not implemented")
}
func (*UnimplementedSpaceApiServer) RecoverKeysByPassphrase(context.Context, *RecoverKeysByPassphraseRequest) (*RecoverKeysByPassphraseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecoverKeysByPassphrase not implemented")
}
func (*UnimplementedSpaceApiServer) TestKeysPassphrase(context.Context, *TestKeysPassphraseRequest) (*TestKeysPassphraseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestKeysPassphrase not implemented")
}
func (*UnimplementedSpaceApiServer) CreateLocalKeysBackup(context.Context, *CreateLocalKeysBackupRequest) (*CreateLocalKeysBackupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLocalKeysBackup not implemented")
}
func (*UnimplementedSpaceApiServer) RecoverKeysByLocalBackup(context.Context, *RecoverKeysByLocalBackupRequest) (*RecoverKeysByLocalBackupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecoverKeysByLocalBackup not implemented")
}
func (*UnimplementedSpaceApiServer) ShareBucket(context.Context, *ShareBucketRequest) (*ShareBucketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShareBucket not implemented")
}
func (*UnimplementedSpaceApiServer) JoinBucket(context.Context, *JoinBucketRequest) (*JoinBucketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinBucket not implemented")
}
func (*UnimplementedSpaceApiServer) ShareFilesViaPublicKey(context.Context, *ShareFilesViaPublicKeyRequest) (*ShareFilesViaPublicKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShareFilesViaPublicKey not implemented")
}
func (*UnimplementedSpaceApiServer) UnshareFilesViaPublicKey(context.Context, *UnshareFilesViaPublicKeyRequest) (*UnshareFilesViaPublicKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnshareFilesViaPublicKey not implemented")
}
func (*UnimplementedSpaceApiServer) HandleFilesInvitation(context.Context, *HandleFilesInvitationRequest) (*HandleFilesInvitationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleFilesInvitation not implemented")
}
func (*UnimplementedSpaceApiServer) NotificationSubscribe(*empty.Empty, SpaceApi_NotificationSubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method NotificationSubscribe not implemented")
}
func (*UnimplementedSpaceApiServer) ListBuckets(context.Context, *ListBucketsRequest) (*ListBucketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBuckets not implemented")
}
func (*UnimplementedSpaceApiServer) GetNotifications(context.Context, *GetNotificationsRequest) (*GetNotificationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNotifications not implemented")
}
func (*UnimplementedSpaceApiServer) ReadNotification(context.Context, *ReadNotificationRequest) (*ReadNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadNotification not implemented")
}
func (*UnimplementedSpaceApiServer) DeleteAccount(context.Context, *DeleteAccountRequest) (*DeleteAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAccount not implemented")
}
func (*UnimplementedSpaceApiServer) ToggleBucketBackup(context.Context, *ToggleBucketBackupRequest) (*ToggleBucketBackupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleBucketBackup not implemented")
}
func (*UnimplementedSpaceApiServer) BucketBackupRestore(context.Context, *BucketBackupRestoreRequest) (*BucketBackupRestoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BucketBackupRestore not implemented")
}
func (*UnimplementedSpaceApiServer) GetUsageInfo(context.Context, *GetUsageInfoRequest) (*GetUsageInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsageInfo not implemented")
}
func (*UnimplementedSpaceApiServer) GetAPISessionTokens(context.Context, *GetAPISessionTokensRequest) (*GetAPISessionTokensResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAPISessionTokens not implemented")
}
func (*UnimplementedSpaceApiServer) GetRecentlySharedWith(context.Context, *GetRecentlySharedWithRequest) (*GetRecentlySharedWithResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecentlySharedWith not implemented")
}
func (*UnimplementedSpaceApiServer) SetNotificationsLastSeenAt(context.Context, *SetNotificationsLastSeenAtRequest) (*SetNotificationsLastSeenAtResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNotificationsLastSeenAt not implemented")
}
func (*UnimplementedSpaceApiServer) SearchFiles(context.Context, *SearchFilesRequest) (*SearchFilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchFiles not implemented")
}
func (*UnimplementedSpaceApiServer) InitializeMasterAppToken(context.Context, *InitializeMasterAppTokenRequest) (*InitializeMasterAppTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitializeMasterAppToken not implemented")
}
func (*UnimplementedSpaceApiServer) GenerateAppToken(context.Context, *GenerateAppTokenRequest) (*GenerateAppTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateAppToken not implemented")
}

func RegisterSpaceApiServer(s *grpc.Server, srv SpaceApiServer) {
	s.RegisterService(&_SpaceApi_serviceDesc, srv)
}

func _SpaceApi_ListDirectories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDirectoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ListDirectories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ListDirectories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ListDirectories(ctx, req.(*ListDirectoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_ListDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDirectoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ListDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ListDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ListDirectory(ctx, req.(*ListDirectoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GenerateKeyPair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateKeyPairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GenerateKeyPair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GenerateKeyPair",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GenerateKeyPair(ctx, req.(*GenerateKeyPairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GetStoredMnemonic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStoredMnemonicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GetStoredMnemonic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GetStoredMnemonic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GetStoredMnemonic(ctx, req.(*GetStoredMnemonicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_RestoreKeyPairViaMnemonic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreKeyPairViaMnemonicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).RestoreKeyPairViaMnemonic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/RestoreKeyPairViaMnemonic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).RestoreKeyPairViaMnemonic(ctx, req.(*RestoreKeyPairViaMnemonicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_DeleteKeyPair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteKeyPairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).DeleteKeyPair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/DeleteKeyPair",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).DeleteKeyPair(ctx, req.(*DeleteKeyPairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GenerateKeyPairWithForce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateKeyPairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GenerateKeyPairWithForce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GenerateKeyPairWithForce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GenerateKeyPairWithForce(ctx, req.(*GenerateKeyPairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GetPublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPublicKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GetPublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GetPublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GetPublicKey(ctx, req.(*GetPublicKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SpaceApiServer).Subscribe(m, &spaceApiSubscribeServer{stream})
}

type SpaceApi_SubscribeServer interface {
	Send(*FileEventResponse) error
	grpc.ServerStream
}

type spaceApiSubscribeServer struct {
	grpc.ServerStream
}

func (x *spaceApiSubscribeServer) Send(m *FileEventResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SpaceApi_TxlSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SpaceApiServer).TxlSubscribe(m, &spaceApiTxlSubscribeServer{stream})
}

type SpaceApi_TxlSubscribeServer interface {
	Send(*TextileEventResponse) error
	grpc.ServerStream
}

type spaceApiTxlSubscribeServer struct {
	grpc.ServerStream
}

func (x *spaceApiTxlSubscribeServer) Send(m *TextileEventResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SpaceApi_OpenFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).OpenFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/OpenFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).OpenFile(ctx, req.(*OpenFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_RemoveDirOrFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDirOrFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).RemoveDirOrFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/RemoveDirOrFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).RemoveDirOrFile(ctx, req.(*RemoveDirOrFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GeneratePublicFileLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneratePublicFileLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GeneratePublicFileLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GeneratePublicFileLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GeneratePublicFileLink(ctx, req.(*GeneratePublicFileLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GetSharedWithMeFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSharedWithMeFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GetSharedWithMeFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GetSharedWithMeFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GetSharedWithMeFiles(ctx, req.(*GetSharedWithMeFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GetSharedByMeFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSharedByMeFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GetSharedByMeFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GetSharedByMeFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GetSharedByMeFiles(ctx, req.(*GetSharedByMeFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_OpenPublicFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenPublicFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).OpenPublicFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/OpenPublicFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).OpenPublicFile(ctx, req.(*OpenPublicFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_AddItems_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AddItemsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SpaceApiServer).AddItems(m, &spaceApiAddItemsServer{stream})
}

type SpaceApi_AddItemsServer interface {
	Send(*AddItemsResponse) error
	grpc.ServerStream
}

type spaceApiAddItemsServer struct {
	grpc.ServerStream
}

func (x *spaceApiAddItemsServer) Send(m *AddItemsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SpaceApi_CreateFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).CreateFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/CreateFolder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).CreateFolder(ctx, req.(*CreateFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_ToggleFuseDrive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleFuseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ToggleFuseDrive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ToggleFuseDrive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ToggleFuseDrive(ctx, req.(*ToggleFuseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GetFuseDriveStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GetFuseDriveStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GetFuseDriveStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GetFuseDriveStatus(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_CreateBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).CreateBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/CreateBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).CreateBucket(ctx, req.(*CreateBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_BackupKeysByPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupKeysByPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).BackupKeysByPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/BackupKeysByPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).BackupKeysByPassphrase(ctx, req.(*BackupKeysByPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_RecoverKeysByPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecoverKeysByPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).RecoverKeysByPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/RecoverKeysByPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).RecoverKeysByPassphrase(ctx, req.(*RecoverKeysByPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_TestKeysPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestKeysPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).TestKeysPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/TestKeysPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).TestKeysPassphrase(ctx, req.(*TestKeysPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_CreateLocalKeysBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLocalKeysBackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).CreateLocalKeysBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/CreateLocalKeysBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).CreateLocalKeysBackup(ctx, req.(*CreateLocalKeysBackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_RecoverKeysByLocalBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecoverKeysByLocalBackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).RecoverKeysByLocalBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/RecoverKeysByLocalBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).RecoverKeysByLocalBackup(ctx, req.(*RecoverKeysByLocalBackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_ShareBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShareBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ShareBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ShareBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ShareBucket(ctx, req.(*ShareBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_JoinBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).JoinBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/JoinBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).JoinBucket(ctx, req.(*JoinBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_ShareFilesViaPublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShareFilesViaPublicKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ShareFilesViaPublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ShareFilesViaPublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ShareFilesViaPublicKey(ctx, req.(*ShareFilesViaPublicKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_UnshareFilesViaPublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnshareFilesViaPublicKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).UnshareFilesViaPublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/UnshareFilesViaPublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).UnshareFilesViaPublicKey(ctx, req.(*UnshareFilesViaPublicKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_HandleFilesInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleFilesInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).HandleFilesInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/HandleFilesInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).HandleFilesInvitation(ctx, req.(*HandleFilesInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_NotificationSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SpaceApiServer).NotificationSubscribe(m, &spaceApiNotificationSubscribeServer{stream})
}

type SpaceApi_NotificationSubscribeServer interface {
	Send(*NotificationEventResponse) error
	grpc.ServerStream
}

type spaceApiNotificationSubscribeServer struct {
	grpc.ServerStream
}

func (x *spaceApiNotificationSubscribeServer) Send(m *NotificationEventResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SpaceApi_ListBuckets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBucketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ListBuckets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ListBuckets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ListBuckets(ctx, req.(*ListBucketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GetNotifications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNotificationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GetNotifications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GetNotifications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GetNotifications(ctx, req.(*GetNotificationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_ReadNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ReadNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ReadNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ReadNotification(ctx, req.(*ReadNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).DeleteAccount(ctx, req.(*DeleteAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_ToggleBucketBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleBucketBackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).ToggleBucketBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/ToggleBucketBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).ToggleBucketBackup(ctx, req.(*ToggleBucketBackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_BucketBackupRestore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BucketBackupRestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).BucketBackupRestore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/BucketBackupRestore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).BucketBackupRestore(ctx, req.(*BucketBackupRestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GetUsageInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsageInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GetUsageInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GetUsageInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GetUsageInfo(ctx, req.(*GetUsageInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GetAPISessionTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAPISessionTokensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GetAPISessionTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GetAPISessionTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GetAPISessionTokens(ctx, req.(*GetAPISessionTokensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GetRecentlySharedWith_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecentlySharedWithRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GetRecentlySharedWith(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GetRecentlySharedWith",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GetRecentlySharedWith(ctx, req.(*GetRecentlySharedWithRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_SetNotificationsLastSeenAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNotificationsLastSeenAtRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).SetNotificationsLastSeenAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/SetNotificationsLastSeenAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).SetNotificationsLastSeenAt(ctx, req.(*SetNotificationsLastSeenAtRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_SearchFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).SearchFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/SearchFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).SearchFiles(ctx, req.(*SearchFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_InitializeMasterAppToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitializeMasterAppTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).InitializeMasterAppToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/InitializeMasterAppToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).InitializeMasterAppToken(ctx, req.(*InitializeMasterAppTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceApi_GenerateAppToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateAppTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceApiServer).GenerateAppToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/space.SpaceApi/GenerateAppToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceApiServer).GenerateAppToken(ctx, req.(*GenerateAppTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SpaceApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "space.SpaceApi",
	HandlerType: (*SpaceApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDirectories",
			Handler:    _SpaceApi_ListDirectories_Handler,
		},
		{
			MethodName: "ListDirectory",
			Handler:    _SpaceApi_ListDirectory_Handler,
		},
		{
			MethodName: "GenerateKeyPair",
			Handler:    _SpaceApi_GenerateKeyPair_Handler,
		},
		{
			MethodName: "GetStoredMnemonic",
			Handler:    _SpaceApi_GetStoredMnemonic_Handler,
		},
		{
			MethodName: "RestoreKeyPairViaMnemonic",
			Handler:    _SpaceApi_RestoreKeyPairViaMnemonic_Handler,
		},
		{
			MethodName: "DeleteKeyPair",
			Handler:    _SpaceApi_DeleteKeyPair_Handler,
		},
		{
			MethodName: "GenerateKeyPairWithForce",
			Handler:    _SpaceApi_GenerateKeyPairWithForce_Handler,
		},
		{
			MethodName: "GetPublicKey",
			Handler:    _SpaceApi_GetPublicKey_Handler,
		},
		{
			MethodName: "OpenFile",
			Handler:    _SpaceApi_OpenFile_Handler,
		},
		{
			MethodName: "RemoveDirOrFile",
			Handler:    _SpaceApi_RemoveDirOrFile_Handler,
		},
		{
			MethodName: "GeneratePublicFileLink",
			Handler:    _SpaceApi_GeneratePublicFileLink_Handler,
		},
		{
			MethodName: "GetSharedWithMeFiles",
			Handler:    _SpaceApi_GetSharedWithMeFiles_Handler,
		},
		{
			MethodName: "GetSharedByMeFiles",
			Handler:    _SpaceApi_GetSharedByMeFiles_Handler,
		},
		{
			MethodName: "OpenPublicFile",
			Handler:    _SpaceApi_OpenPublicFile_Handler,
		},
		{
			MethodName: "CreateFolder",
			Handler:    _SpaceApi_CreateFolder_Handler,
		},
		{
			MethodName: "ToggleFuseDrive",
			Handler:    _SpaceApi_ToggleFuseDrive_Handler,
		},
		{
			MethodName: "GetFuseDriveStatus",
			Handler:    _SpaceApi_GetFuseDriveStatus_Handler,
		},
		{
			MethodName: "CreateBucket",
			Handler:    _SpaceApi_CreateBucket_Handler,
		},
		{
			MethodName: "BackupKeysByPassphrase",
			Handler:    _SpaceApi_BackupKeysByPassphrase_Handler,
		},
		{
			MethodName: "RecoverKeysByPassphrase",
			Handler:    _SpaceApi_RecoverKeysByPassphrase_Handler,
		},
		{
			MethodName: "TestKeysPassphrase",
			Handler:    _SpaceApi_TestKeysPassphrase_Handler,
		},
		{
			MethodName: "CreateLocalKeysBackup",
			Handler:    _SpaceApi_CreateLocalKeysBackup_Handler,
		},
		{
			MethodName: "RecoverKeysByLocalBackup",
			Handler:    _SpaceApi_RecoverKeysByLocalBackup_Handler,
		},
		{
			MethodName: "ShareBucket",
			Handler:    _SpaceApi_ShareBucket_Handler,
		},
		{
			MethodName: "JoinBucket",
			Handler:    _SpaceApi_JoinBucket_Handler,
		},
		{
			MethodName: "ShareFilesViaPublicKey",
			Handler:    _SpaceApi_ShareFilesViaPublicKey_Handler,
		},
		{
			MethodName: "UnshareFilesViaPublicKey",
			Handler:    _SpaceApi_UnshareFilesViaPublicKey_Handler,
		},
		{
			MethodName: "HandleFilesInvitation",
			Handler:    _SpaceApi_HandleFilesInvitation_Handler,
		},
		{
			MethodName: "ListBuckets",
			Handler:    _SpaceApi_ListBuckets_Handler,
		},
		{
			MethodName: "GetNotifications",
			Handler:    _SpaceApi_GetNotifications_Handler,
		},
		{
			MethodName: "ReadNotification",
			Handler:    _SpaceApi_ReadNotification_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _SpaceApi_DeleteAccount_Handler,
		},
		{
			MethodName: "ToggleBucketBackup",
			Handler:    _SpaceApi_ToggleBucketBackup_Handler,
		},
		{
			MethodName: "BucketBackupRestore",
			Handler:    _SpaceApi_BucketBackupRestore_Handler,
		},
		{
			MethodName: "GetUsageInfo",
			Handler:    _SpaceApi_GetUsageInfo_Handler,
		},
		{
			MethodName: "GetAPISessionTokens",
			Handler:    _SpaceApi_GetAPISessionTokens_Handler,
		},
		{
			MethodName: "GetRecentlySharedWith",
			Handler:    _SpaceApi_GetRecentlySharedWith_Handler,
		},
		{
			MethodName: "SetNotificationsLastSeenAt",
			Handler:    _SpaceApi_SetNotificationsLastSeenAt_Handler,
		},
		{
			MethodName: "SearchFiles",
			Handler:    _SpaceApi_SearchFiles_Handler,
		},
		{
			MethodName: "InitializeMasterAppToken",
			Handler:    _SpaceApi_InitializeMasterAppToken_Handler,
		},
		{
			MethodName: "GenerateAppToken",
			Handler:    _SpaceApi_GenerateAppToken_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _SpaceApi_Subscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "TxlSubscribe",
			Handler:       _SpaceApi_TxlSubscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AddItems",
			Handler:       _SpaceApi_AddItems_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "NotificationSubscribe",
			Handler:       _SpaceApi_NotificationSubscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "space.proto",
}
